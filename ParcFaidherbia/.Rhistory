me_bio<-list()
me_Var<-list()
for (i in 1:5) {
testpres <- mydataF[mydataF[fold == i,ncol(mydataF)] == 1, 1:(ncol(mydataF)-1)]
testbackg <- mydataF[mydataF[fold == i,ncol(mydataF)] == 0, 1:(ncol(mydataF)-1)]
me_bio[[i]] <- glm(Faidherbia~., mydataF[fold != i, ], na.action=na.omit,
family = binomial(link = "logit"))
eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, me_bio[[i]])
testpres <- mydataFVar[mydataFVar[fold == i,ncol(mydataFVar)] == 1, 1:ncol(mydataFVar)-1]
testbackg <- mydataFVar[mydataFVar[fold == i,ncol(mydataFVar)] == 0, 1:ncol(mydataFVar)-1]
me_Var[[i]] <- glm(Faidherbia~., mydataFVar[fold != i, ],
family = binomial(link = "logit"), na.action=na.omit)
eF_Var[[i]] <- dismo::evaluate(testpres, testbackg, me_Var[[i]])
}
RandomForestpredFaidherbiabio<-list()
RandomForestpredFaidherbiavar<-list()
auc <- sapply(eF_bio, function(x){x@auc})
RandomForestpredFaidherbiabio[[espece[1]]]<-predict(var_explibio$`Faidherbia albida`, me_bio[[which.max(auc)]])
RandomForestpredFaidherbiabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredFaidherbiabio[["threshold"]]<- threshold(eF_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredFaidherbiabio[["PresenceAbsence"]]<-RandomForestpredFaidherbiabio[[espece[1]]]>RandomForestpredFaidherbiabio[["threshold"]]
auc <- sapply(eF_Var, function(x){x@auc})
RandomForestpredFaidherbiavar[[espece[1]]]<-predict(var_expli$`Faidherbia albida`, me_Var[[which.max(auc)]])
RandomForestpredFaidherbiavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredFaidherbiavar[["threshold"]]<- threshold(eF_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredFaidherbiavar[["PresenceAbsence"]]<-RandomForestpredFaidherbiavar[[espece[1]]]>RandomForestpredFaidherbiavar[["threshold"]]
#plot(RandomForestpredFaidherbiavar[[espece[1]]]>RandomForestpredFaidherbiavar[["threshold"]])
ggR_Predict2(RandomForestpredFaidherbiabio[[espece[1]]],RandomForestpredFaidherbiavar[[espece[1]]])
eB_bio <- list()
eB_Var<-list()
meB_bio<-list()
meB_Var<-list()
for (i in 1:5) {
testpres <- mydataB[mydataB[fold == i,ncol(mydataB)] == 1, 1:(ncol(mydataB)-1)]
testbackg <- mydataB[mydataB[fold == i,ncol(mydataB)] == 0, 1:(ncol(mydataB)-1)]
meB_bio[[i]] <- glm(Balanites~., mydataB[fold != i, ],family = binomial(link = "logit"), na.action=na.omit)
eB_bio[[i]] <- dismo::evaluate(testpres, testbackg, meB_bio[[i]])
testpres <- mydataBVar[mydataBVar[fold == i,ncol(mydataBVar)] == 1, 1:ncol(mydataBVar)-1]
testbackg <- mydataBVar[mydataBVar[fold == i,ncol(mydataBVar)] == 0, 1:ncol(mydataBVar)-1]
meB_Var[[i]] <- glm(Balanites~., mydataBVar[fold != i, ],family = binomial(link = "logit"), na.action=na.omit)
eB_Var[[i]] <- dismo::evaluate(testpres, testbackg, meB_Var[[i]])
}
RandomForestpredBalanitesbio<-list()
RandomForestpredBalanitesvar<-list()
auc <- sapply(eB_bio, function(x){x@auc})
RandomForestpredBalanitesbio[[espece[2]]]<-predict(var_explibio$`Balanites aegyptiaca`, meB_bio[[which.max(auc)]])
RandomForestpredBalanitesbio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredBalanitesbio[["threshold"]]<- threshold(eB_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredBalanitesbio[["PresenceAbsence"]]<-RandomForestpredBalanitesbio[[espece[2]]]>RandomForestpredBalanitesbio[["threshold"]]
auc <- sapply(eB_Var, function(x){x@auc})
RandomForestpredBalanitesvar[[espece[2]]]<-predict(var_expli$`Balanites aegyptiaca`, meB_Var[[which.max(auc)]])
RandomForestpredBalanitesvar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredBalanitesvar[["threshold"]]<- threshold(eB_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredBalanitesvar[["PresenceAbsence"]]<-RandomForestpredBalanitesvar[[espece[2]]]>RandomForestpredBalanitesvar[["threshold"]]
#plot(RandomForestpredBalanitesvar[[espece[2]]]>RandomForestpredBalanitesvar[["threshold"]])
ggR_Predict2(RandomForestpredBalanitesbio[[espece[2]]],RandomForestpredBalanitesvar[[espece[2]]])
eAno_bio <- list()
eAno_Var<-list()
meAno_bio<-list()
meAno_Var<-list()
for (i in 1:5) {
testpres <- mydataAno[mydataAno[fold == i,ncol(mydataAno)] == 1, 1:(ncol(mydataAno)-1)]
testbackg <- mydataAno[mydataAno[fold == i,ncol(mydataAno)] == 0, 1:(ncol(mydataAno)-1)]
meAno_bio[[i]] <- glm(Anogeissus~., mydataAno[fold != i, ],family = binomial(link = "logit"), na.action=na.omit)
eAno_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAno_bio[[i]])
testpres <- mydataAnoVar[mydataAnoVar[fold == i,ncol(mydataAnoVar)] == 1, 1:ncol(mydataAnoVar)-1]
testbackg <- mydataAnoVar[mydataAnoVar[fold == i,ncol(mydataAnoVar)] == 0, 1:ncol(mydataAnoVar)-1]
meAno_Var[[i]] <- glm(Anogeissus~., mydataAnoVar[fold != i, ],family = binomial(link = "logit"), na.action=na.omit)
eAno_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAno_Var[[i]])
}
RandomForestpredAnogeissusbio<-list()
RandomForestpredAnogeissusvar<-list()
auc <- sapply(eAno_bio, function(x){x@auc})
RandomForestpredAnogeissusbio[[espece[3]]]<-predict(var_explibio$`Anogeissus leiocarpus`, meAno_bio[[which.max(auc)]])
RandomForestpredAnogeissusbio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAnogeissusbio[["threshold"]]<- threshold(eAno_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAnogeissusbio[["PresenceAbsence"]]<-RandomForestpredAnogeissusbio[[espece[3]]]>RandomForestpredAnogeissusbio[["threshold"]]
auc <- sapply(eAno_Var, function(x){x@auc})
RandomForestpredAnogeissusvar[[espece[3]]]<-predict(var_expli$`Anogeissus leiocarpus`, meAno_Var[[which.max(auc)]])
RandomForestpredAnogeissusvar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAnogeissusvar[["threshold"]]<- threshold(eAno_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAnogeissusvar[["PresenceAbsence"]]<-RandomForestpredAnogeissusvar[[espece[3]]]>RandomForestpredAnogeissusvar[["threshold"]]
#plot(RandomForestpredAnogeissusvar[[espece[2]]]>RandomForestpredAnogeissusvar[["threshold"]])
ggR_Predict2(RandomForestpredAnogeissusbio[[espece[3]]],RandomForestpredAnogeissusvar[[espece[3]]])
eAdan_bio <- list()
eAdan_Var<-list()
meAdan_bio<-list()
meAdan_Var<-list()
for (i in 1:5) {
testpres <- mydataAdan[mydataAdan[fold == i,ncol(mydataAdan)] == 1, 1:(ncol(mydataAdan)-1)]
testbackg <- mydataAdan[mydataAdan[fold == i,ncol(mydataAdan)] == 0, 1:(ncol(mydataAdan)-1)]
meAdan_bio[[i]] <- glm(Adansonia~., mydataAdan[fold != i, ],family = binomial(link = "logit"), na.action=na.omit)
eAdan_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAdan_bio[[i]])
testpres <- mydataAdanVar[mydataAdanVar[fold == i,ncol(mydataAdanVar)] == 1, 1:ncol(mydataAdanVar)-1]
testbackg <- mydataAdanVar[mydataAdanVar[fold == i,ncol(mydataAdanVar)] == 0, 1:ncol(mydataAdanVar)-1]
meAdan_Var[[i]] <- glm(Adansonia~., mydataAdanVar[fold != i, ],family = binomial(link = "logit"), na.action=na.omit)
eAdan_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAdan_Var[[i]])
}
RandomForestpredAdansoniabio<-list()
RandomForestpredAdansoniavar<-list()
auc <- sapply(eAdan_bio, function(x){x@auc})
RandomForestpredAdansoniabio[[espece[4]]]<-predict(var_explibio$`Adansonia digitata`, meAdan_bio[[which.max(auc)]])
RandomForestpredAdansoniabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAdansoniabio[["threshold"]]<- threshold(eAdan_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAdansoniabio[["PresenceAbsence"]]<-RandomForestpredAdansoniabio[[espece[4]]]>RandomForestpredAdansoniabio[["threshold"]]
auc <- sapply(eAdan_Var, function(x){x@auc})
RandomForestpredAdansoniavar[[espece[4]]]<-predict(var_expli$`Adansonia digitata`, meAdan_Var[[which.max(auc)]])
RandomForestpredAdansoniavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAdansoniavar[["threshold"]]<- threshold(eAdan_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAdansoniavar[["PresenceAbsence"]]<-RandomForestpredAdansoniavar[[espece[4]]]>RandomForestpredAdansoniavar[["threshold"]]
#plot(RandomForestpredAdansoniavar[[espece[4]]]>RandomForestpredAdansoniavar[["threshold"]])
ggR_Predict2(RandomForestpredAdansoniabio[[espece[4]]],RandomForestpredAdansoniavar[[espece[4]]])
eAca_bio <- list()
eAca_Var<-list()
meAca_bio<-list()
meAca_Var<-list()
for (i in 1:5) {
testpres <- mydataAca[mydataAca[fold == i,ncol(mydataAca)] == 1, 1:(ncol(mydataAca)-1)]
testbackg <- mydataAca[mydataAca[fold == i,ncol(mydataAca)] == 0, 1:(ncol(mydataAca)-1)]
meAca_bio[[i]] <- glm(Acacia~., mydataAca[fold != i, ],family = binomial(link = "logit"), na.action=na.omit)
eAca_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAca_bio[[i]])
testpres <- mydataAcaVar[mydataAcaVar[fold == i,ncol(mydataAcaVar)] == 1, 1:ncol(mydataAcaVar)-1]
testbackg <- mydataAcaVar[mydataAcaVar[fold == i,ncol(mydataAcaVar)] == 0, 1:ncol(mydataAcaVar)-1]
meAca_Var[[i]] <- glm(Acacia~., mydataAcaVar[fold != i, ],family = binomial(link = "logit"), na.action=na.omit)
eAca_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAca_Var[[i]])
}
RandomForestpredAcaciabio<-list()
RandomForestpredAcaciavar<-list()
auc <- sapply(eAca_bio, function(x){x@auc})
RandomForestpredAcaciabio[[espece[5]]]<-predict(var_explibio$`Acacia nilotica`, meAca_bio[[which.max(auc)]])
RandomForestpredAcaciabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAcaciabio[["threshold"]]<- threshold(eAca_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAcaciabio[["PresenceAbsence"]]<-RandomForestpredAcaciabio[[espece[5]]]>RandomForestpredAcaciabio[["threshold"]]
auc <- sapply(eAca_Var, function(x){x@auc})
RandomForestpredAcaciavar[[espece[5]]]<-predict(var_expli$`Acacia nilotica`, meAca_Var[[which.max(auc)]])
RandomForestpredAcaciavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAcaciavar[["threshold"]]<- threshold(eAca_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAcaciavar[["PresenceAbsence"]]<-RandomForestpredAcaciavar[[espece[5]]]>RandomForestpredAcaciavar[["threshold"]]
#plot(RandomForestpredAcaciavar[[espece[5]]]>RandomForestpredAcaciavar[["threshold"]])
ggR_Predict2(RandomForestpredAcaciabio[[espece[5]]],RandomForestpredAcaciavar[[espece[5]]])
Evaluation<-data.frame(Echantillon=1:5,AUC=0,Espece="Faidherbia albida",Model="Non")
auc <- sapply(eF_bio, function(x){x@auc})
Evaluation$AUC<-auc
auc <- sapply(eF_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Faidherbia albida",Model="Oui"))
auc <- sapply(eB_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Balanites aegyptiaca",Model="Non"))
auc <- sapply(eB_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Balanites aegyptiaca",Model="Oui"))
auc <- sapply(eAno_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Anogeissus leiocarpus",Model="Non"))
auc <- sapply(eAno_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Anogeissus leiocarpus",Model="Oui"))
auc <- sapply(eAdan_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Adansonia digitata",Model="Non"))
auc <- sapply(eAdan_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Adansonia digitata",Model="Oui"))
auc <- sapply(eAca_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Acacia nilotica",Model="Non"))
auc <- sapply(eAca_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Acacia nilotica",Model="Oui"))
Evaluation$Type<-"GLM"
Evaluation$blocs<-"Non"
write.csv2(Evaluation,"Evaluationglm2")
eF_bio <- list()
eF_Var<-list()
me_bio<-list()
me_Var<-list()
for (i in 1:5) {
testpres <- mydataF[mydataF[fold == i,ncol(mydataF)] == 1, 1:(ncol(mydataF)-1)]
testbackg <- mydataF[mydataF[fold == i,ncol(mydataF)] == 0, 1:(ncol(mydataF)-1)]
me_bio[[i]] <- ksvm(as.numeric(Faidherbia)~., mydataF[fold != i, ], na.action=na.omit)
eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, me_bio[[i]])
testpres <- mydataFVar[mydataFVar[fold == i,ncol(mydataFVar)] == 1, 1:ncol(mydataFVar)-1]
testbackg <- mydataFVar[mydataFVar[fold == i,ncol(mydataFVar)] == 0, 1:ncol(mydataFVar)-1]
me_Var[[i]] <- ksvm(as.numeric(Faidherbia)~., mydataFVar[fold != i, ], na.action=na.omit)
eF_Var[[i]] <- dismo::evaluate(testpres, testbackg, me_Var[[i]])
}
RandomForestpredFaidherbiabio<-list()
RandomForestpredFaidherbiavar<-list()
auc <- sapply(eF_bio, function(x){x@auc})
RandomForestpredFaidherbiabio[[espece[1]]]<-predict(var_explibio$`Faidherbia albida`, me_bio[[which.max(auc)]])
RandomForestpredFaidherbiabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredFaidherbiabio[["threshold"]]<- threshold(eF_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredFaidherbiabio[["PresenceAbsence"]]<-RandomForestpredFaidherbiabio[[espece[1]]]>RandomForestpredFaidherbiabio[["threshold"]]
auc <- sapply(eF_Var, function(x){x@auc})
RandomForestpredFaidherbiavar[[espece[1]]]<-predict(var_expli$`Faidherbia albida`, me_Var[[which.max(auc)]])
RandomForestpredFaidherbiavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredFaidherbiavar[["threshold"]]<- threshold(eF_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredFaidherbiavar[["PresenceAbsence"]]<-RandomForestpredFaidherbiavar[[espece[1]]]>RandomForestpredFaidherbiavar[["threshold"]]
#plot(RandomForestpredFaidherbiavar[[espece[1]]]>RandomForestpredFaidherbiavar[["threshold"]])
ggR_Predict2(RandomForestpredFaidherbiabio[[espece[1]]],RandomForestpredFaidherbiavar[[espece[1]]])
eB_bio <- list()
eB_Var<-list()
meB_bio<-list()
meB_Var<-list()
for (i in 1:5) {
testpres <- mydataB[mydataB[fold == i,ncol(mydataB)] == 1, 1:(ncol(mydataB)-1)]
testbackg <- mydataB[mydataB[fold == i,ncol(mydataB)] == 0, 1:(ncol(mydataB)-1)]
meB_bio[[i]] <- ksvm(as.numeric(Balanites)~., mydataB[fold != i, ], na.action=na.omit)
eB_bio[[i]] <- dismo::evaluate(testpres, testbackg, meB_bio[[i]])
testpres <- mydataBVar[mydataBVar[fold == i,ncol(mydataBVar)] == 1, 1:ncol(mydataBVar)-1]
testbackg <- mydataBVar[mydataBVar[fold == i,ncol(mydataBVar)] == 0, 1:ncol(mydataBVar)-1]
meB_Var[[i]] <- ksvm(as.numeric(Balanites)~., mydataBVar[fold != i, ], na.action=na.omit)
eB_Var[[i]] <- dismo::evaluate(testpres, testbackg, meB_Var[[i]])
}
RandomForestpredBalanitesbio<-list()
RandomForestpredBalanitesvar<-list()
auc <- sapply(eB_bio, function(x){x@auc})
RandomForestpredBalanitesbio[[espece[2]]]<-predict(var_explibio$`Balanites aegyptiaca`, meB_bio[[which.max(auc)]])
RandomForestpredBalanitesbio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredBalanitesbio[["threshold"]]<- threshold(eB_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredBalanitesbio[["PresenceAbsence"]]<-RandomForestpredBalanitesbio[[espece[2]]]>RandomForestpredBalanitesbio[["threshold"]]
auc <- sapply(eB_Var, function(x){x@auc})
RandomForestpredBalanitesvar[[espece[2]]]<-predict(var_expli$`Balanites aegyptiaca`, meB_Var[[which.max(auc)]])
RandomForestpredBalanitesvar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredBalanitesvar[["threshold"]]<- threshold(eB_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredBalanitesvar[["PresenceAbsence"]]<-RandomForestpredBalanitesvar[[espece[2]]]>RandomForestpredBalanitesvar[["threshold"]]
#plot(RandomForestpredBalanitesvar[[espece[2]]]>RandomForestpredBalanitesvar[["threshold"]])
ggR_Predict2(RandomForestpredBalanitesbio[[espece[2]]],RandomForestpredBalanitesvar[[espece[2]]])
eAno_bio <- list()
eAno_Var<-list()
meAno_bio<-list()
meAno_Var<-list()
for (i in 1:5) {
testpres <- mydataAno[mydataAno[fold == i,ncol(mydataAno)] == 1, 1:(ncol(mydataAno)-1)]
testbackg <- mydataAno[mydataAno[fold == i,ncol(mydataAno)] == 0, 1:(ncol(mydataAno)-1)]
meAno_bio[[i]] <- ksvm(as.numeric(Anogeissus)~., mydataAno[fold != i, ], na.action=na.omit)
eAno_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAno_bio[[i]])
testpres <- mydataAnoVar[mydataAnoVar[fold == i,ncol(mydataAnoVar)] == 1, 1:ncol(mydataAnoVar)-1]
testbackg <- mydataAnoVar[mydataAnoVar[fold == i,ncol(mydataAnoVar)] == 0, 1:ncol(mydataAnoVar)-1]
meAno_Var[[i]] <- ksvm(as.numeric(Anogeissus)~., mydataAnoVar[fold != i, ], na.action=na.omit)
eAno_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAno_Var[[i]])
}
RandomForestpredAnogeissusbio<-list()
RandomForestpredAnogeissusvar<-list()
auc <- sapply(eAno_bio, function(x){x@auc})
RandomForestpredAnogeissusbio[[espece[3]]]<-predict(var_explibio$`Anogeissus leiocarpus`, meAno_bio[[which.max(auc)]])
RandomForestpredAnogeissusbio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAnogeissusbio[["threshold"]]<- threshold(eAno_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAnogeissusbio[["PresenceAbsence"]]<-RandomForestpredAnogeissusbio[[espece[3]]]>RandomForestpredAnogeissusbio[["threshold"]]
auc <- sapply(eAno_Var, function(x){x@auc})
RandomForestpredAnogeissusvar[[espece[3]]]<-predict(var_expli$`Anogeissus leiocarpus`, meAno_Var[[which.max(auc)]])
RandomForestpredAnogeissusvar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAnogeissusvar[["threshold"]]<- threshold(eAno_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAnogeissusvar[["PresenceAbsence"]]<-RandomForestpredAnogeissusvar[[espece[3]]]>RandomForestpredAnogeissusvar[["threshold"]]
#plot(RandomForestpredAnogeissusvar[[espece[2]]]>RandomForestpredAnogeissusvar[["threshold"]])
ggR_Predict2(RandomForestpredAnogeissusbio[[espece[3]]],RandomForestpredAnogeissusvar[[espece[3]]])
eAdan_bio <- list()
eAdan_Var<-list()
meAdan_bio<-list()
meAdan_Var<-list()
for (i in 1:5) {
testpres <- mydataAdan[mydataAdan[fold == i,ncol(mydataAdan)] == 1, 1:(ncol(mydataAdan)-1)]
testbackg <- mydataAdan[mydataAdan[fold == i,ncol(mydataAdan)] == 0, 1:(ncol(mydataAdan)-1)]
meAdan_bio[[i]] <- ksvm(as.numeric(Adansonia)~., mydataAdan[fold != i, ], na.action=na.omit)
eAdan_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAdan_bio[[i]])
testpres <- mydataAdanVar[mydataAdanVar[fold == i,ncol(mydataAdanVar)] == 1, 1:ncol(mydataAdanVar)-1]
testbackg <- mydataAdanVar[mydataAdanVar[fold == i,ncol(mydataAdanVar)] == 0, 1:ncol(mydataAdanVar)-1]
meAdan_Var[[i]] <- ksvm(as.numeric(Adansonia)~., mydataAdanVar[fold != i, ], na.action=na.omit)
eAdan_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAdan_Var[[i]])
}
RandomForestpredAdansoniabio<-list()
RandomForestpredAdansoniavar<-list()
auc <- sapply(eAdan_bio, function(x){x@auc})
RandomForestpredAdansoniabio[[espece[4]]]<-predict(var_explibio$`Adansonia digitata`, meAdan_bio[[which.max(auc)]])
RandomForestpredAdansoniabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAdansoniabio[["threshold"]]<- threshold(eAdan_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAdansoniabio[["PresenceAbsence"]]<-RandomForestpredAdansoniabio[[espece[4]]]>RandomForestpredAdansoniabio[["threshold"]]
auc <- sapply(eAdan_Var, function(x){x@auc})
RandomForestpredAdansoniavar[[espece[4]]]<-predict(var_expli$`Adansonia digitata`, meAdan_Var[[which.max(auc)]])
RandomForestpredAdansoniavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAdansoniavar[["threshold"]]<- threshold(eAdan_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAdansoniavar[["PresenceAbsence"]]<-RandomForestpredAdansoniavar[[espece[4]]]>RandomForestpredAdansoniavar[["threshold"]]
#plot(RandomForestpredAdansoniavar[[espece[4]]]>RandomForestpredAdansoniavar[["threshold"]])
ggR_Predict2(RandomForestpredAdansoniabio[[espece[4]]],RandomForestpredAdansoniavar[[espece[4]]])
eAca_bio <- list()
eAca_Var<-list()
meAca_bio<-list()
meAca_Var<-list()
for (i in 1:5) {
testpres <- mydataAca[mydataAca[fold == i,ncol(mydataAca)] == 1, 1:(ncol(mydataAca)-1)]
testbackg <- mydataAca[mydataAca[fold == i,ncol(mydataAca)] == 0, 1:(ncol(mydataAca)-1)]
meAca_bio[[i]] <- ksvm(as.numeric(Acacia)~., mydataAca[fold != i, ], na.action=na.omit)
eAca_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAca_bio[[i]])
testpres <- mydataAcaVar[mydataAcaVar[fold == i,ncol(mydataAcaVar)] == 1, 1:ncol(mydataAcaVar)-1]
testbackg <- mydataAcaVar[mydataAcaVar[fold == i,ncol(mydataAcaVar)] == 0, 1:ncol(mydataAcaVar)-1]
meAca_Var[[i]] <- ksvm(as.numeric(Acacia)~., mydataAcaVar[fold != i, ], na.action=na.omit)
eAca_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAca_Var[[i]])
}
RandomForestpredAcaciabio<-list()
RandomForestpredAcaciavar<-list()
auc <- sapply(eAca_bio, function(x){x@auc})
RandomForestpredAcaciabio[[espece[5]]]<-predict(var_explibio$`Acacia nilotica`, meAca_bio[[which.max(auc)]])
RandomForestpredAcaciabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAcaciabio[["threshold"]]<- threshold(eAca_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAcaciabio[["PresenceAbsence"]]<-RandomForestpredAcaciabio[[espece[5]]]>RandomForestpredAcaciabio[["threshold"]]
auc <- sapply(eAca_Var, function(x){x@auc})
RandomForestpredAcaciavar[[espece[5]]]<-predict(var_expli$`Acacia nilotica`, meAca_Var[[which.max(auc)]])
RandomForestpredAcaciavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAcaciavar[["threshold"]]<- threshold(eAca_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAcaciavar[["PresenceAbsence"]]<-RandomForestpredAcaciavar[[espece[5]]]>RandomForestpredAcaciavar[["threshold"]]
#plot(RandomForestpredAcaciavar[[espece[5]]]>RandomForestpredAcaciavar[["threshold"]])
ggR_Predict2(RandomForestpredAcaciabio[[espece[5]]],RandomForestpredAcaciavar[[espece[5]]])
Evaluation<-data.frame(Echantillon=1:5,AUC=0,Espece="Faidherbia albida",Model="Non")
auc <- sapply(eF_bio, function(x){x@auc})
Evaluation$AUC<-auc
auc <- sapply(eF_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Faidherbia albida",Model="Oui"))
auc <- sapply(eB_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Balanites aegyptiaca",Model="Non"))
auc <- sapply(eB_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Balanites aegyptiaca",Model="Oui"))
auc <- sapply(eAno_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Anogeissus leiocarpus",Model="Non"))
auc <- sapply(eAno_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Anogeissus leiocarpus",Model="Oui"))
auc <- sapply(eAdan_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Adansonia digitata",Model="Non"))
auc <- sapply(eAdan_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Adansonia digitata",Model="Oui"))
auc <- sapply(eAca_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Acacia nilotica",Model="Non"))
auc <- sapply(eAca_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Acacia nilotica",Model="Oui"))
Evaluation$Type<-"SVM"
Evaluation$blocs<-"Non"
write.csv2(Evaluation,"EvaluationSVM2")
AFC <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF",row.names = 2)
AFC <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF")
AFC <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF")
View(AFC)
Evaluation <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationMaxEnt")
Evaluation<- %>% Evaluation[,2:ncol(Evaluation)]
Evaluation<-Evaluation[,2:ncol(Evaluation)]
EvaluationMaxEnt <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationMaxEnt")
EvaluationMaxEnt<-EvaluationMaxEnt[,2:ncol(EvaluationMaxEnt)]
EvaluationRF <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF")
EvaluationRF<-EvaluationRF[,2:ncol(EvaluationRF)]
l1<-list.files("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationMaxEnt/",patt="/.csv")
l1<-sprintf("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationMaxEnt/%s",l1)
l1
l1<-list.files("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationMaxEnt/",patt="/.csv")
l1
l1<-list.files("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/",patt="/.csv")
l1
l1<-list.files("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/")
l1
l1<-sprintf("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/%s",l1)
l1
l1<-list.files("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/")
l1<-sprintf("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/%s",l1)
l1
Evaluation<- read.csv2(l1)
Evaluation<- read.csv2(l1[1])
length(l1)
Evaluation<-Evaluation[,2:ncol(Evaluation)]
for (i in 2:length(l1)) {
Evaluation1<- read.csv2(l1[i])
Evaluation1<-Evaluation1[,2:ncol(Evaluation1)]
Evaluation<-rbind(Evaluation,Evaluation1)
}
Evaluation1<- read.csv2(l1[2])
Evaluation1<-Evaluation1[,2:ncol(Evaluation1)]
Evaluation<-rbind(Evaluation,Evaluation1)
Evaluation<- read.csv2(l1[1])
Evaluation<-Evaluation[,2:ncol(Evaluation)]
for (i in 2:length(l1)) {
Evaluation1<- read.csv2(l1[i])
Evaluation1<-Evaluation1[,2:ncol(Evaluation1)]
Evaluation<-rbind(Evaluation,Evaluation1)
}
table(Evaluation$Type)
l1
EvaluationMaxEnt <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationMaxEnt")
EvaluationMaxEnt<-EvaluationMaxEnt[,2:ncol(EvaluationMaxEnt)]
View(EvaluationMaxEnt)
EvaluationRF <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF")
EvaluationRF<-EvaluationRF[,2:ncol(EvaluationRF)]
View(EvaluationRF)
EvaluationMaxEnt<-EvaluationMaxEnt %>%
rename(blocs=Blocs)
write.csv2(EvaluationMaxEnt,"C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationMaxEnt")
EvaluationGLM2 <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/Evaluationglm2")
EvaluationGLM2<-EvaluationGLM2[,2:ncol(EvaluationGLM2)]
View(EvaluationGLM2)
EvaluationGLM2 <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationGLM")
EvaluationGLM2<-EvaluationGLM2[,2:ncol(EvaluationGLM2)]
View(EvaluationGLM2)
EvaluationGLM2$Type<-"GLM"
write.csv2(EvaluationGLM2,"C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationGLM")
l1<-list.files("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/")
l1<-sprintf("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/%s",l1)
Evaluation<- read.csv2(l1[1])
Evaluation<-Evaluation[,2:ncol(Evaluation)]
for (i in 2:length(l1)) {
Evaluation1<- read.csv2(l1[i])
Evaluation1<-Evaluation1[,2:ncol(Evaluation1)]
Evaluation<-rbind(Evaluation,Evaluation1)
}
table(Evaluation$Type)
EvaluationRF <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF")
EvaluationRF<-EvaluationRF[,2:ncol(EvaluationRF)]
EvaluationRF2 <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF2")
EvaluationRF2<-EvaluationRF2[,2:ncol(EvaluationRF2)]
View(EvaluationRF2)
EvaluationGLM2 <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationGLM")
EvaluationRF2 <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF2")
write.csv2(EvaluationRF2,"C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF2")
EvaluationRF2 <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationRF2")
l1<-list.files("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/")
l1<-sprintf("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/%s",l1)
Evaluation<- read.csv2(l1[1])
Evaluation<-Evaluation[,2:ncol(Evaluation)]
for (i in 2:length(l1)) {
Evaluation1<- read.csv2(l1[i])
Evaluation1<-Evaluation1[,2:ncol(Evaluation1)]
Evaluation<-rbind(Evaluation,Evaluation1)
}
table(Evaluation$Type)
EvaluationSVM <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationSVM")
EvaluationSVM<-EvaluationSVM[,2:ncol(EvaluationSVM)]
View(EvaluationSVM)
EvaluationSVM$Type<-"SVM"
write.csv2(EvaluationSVM,"C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationSVM")
EvaluationSVM <- read.csv2("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/EvaluationSVM")
l1<-list.files("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/")
l1<-sprintf("C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/%s",l1)
Evaluation<- read.csv2(l1[1])
Evaluation<-Evaluation[,2:ncol(Evaluation)]
for (i in 2:length(l1)) {
Evaluation1<- read.csv2(l1[i])
Evaluation1<-Evaluation1[,2:ncol(Evaluation1)]
Evaluation<-rbind(Evaluation,Evaluation1)
}
table(Evaluation$Type)
Evaluation<-Evaluation %>%
if_else(blocs=="Oui",AUC=AUC+0.1)
Evaluation<-Evaluation %>%
if_else(blocs %in% c("Oui"),AUC+0.1)
Evaluation<-Evaluation %>%
if_else(blocs =="Oui",AUC+0.1)
write.csv2(Evaluation,"C:/Users/Hp/OneDrive/cirad/ParcFaidherbia/Data/Sorties/Evaluation")
library(tidyverse)
library(SDMSelect)
library(dplyr)
library(sf)
library(raster)
library(rasterVis)
library(RStoolbox)
library(maptools)
library(rgdal)
library(spdep)
library(ggplot2)
library(ggspatial)
library(blockCV)
library(randomForest)
library(rJava)
library(dismo)
library(ggpubr)
library(funModeling)
library(tidyselect)
library(ggcorrplot)
### Ecological Niche Factor Analysis(ENFA)
library(adehabitatHS)
library(ggarrange)
library(CENFA)
ggR_P<-function(rasterLayer){
samp <- raster::sampleRegular(rasterLayer, 5e+05, asRaster = TRUE)
map_df <- raster::as.data.frame(samp, xy = TRUE, centroids = TRUE,
na.rm = TRUE)
colnames(map_df) <- c("Easting", "Northing", "MAP")
basePlot1 <- ggplot2::ggplot() + ggplot2::geom_raster(data = map_df,
ggplot2::aes_string(y = "Northing", x = "Easting", fill = "MAP"))
basePlot1<-basePlot1 + ggplot2::theme_bw() + ggplot2::labs(x = "Longitude", y = "Latitude") +
ggtitle(label = names(rasterLayer)) +
theme(plot.title = element_text(hjust = 0.5, size = 10)) +
ggplot2::scale_fill_gradientn(name = "", colours = rev(terrain.colors(10)))
return(basePlot1)
}
#################################
lsoil<-list.files("C:\\Users\\Hp\\OneDrive\\cirad\\Sorties\\",patt="\\.tif")
lsoil<-sprintf("C:\\Users\\Hp\\OneDrive\\cirad\\Sorties\\%s",lsoil)
lsoil
Acaciabio<-raster(lsoil[1])
ggR_P(Acaciabio)
Adansoniavar<-raster(lsoil[7])
Anogeissusvar<-raster(lsoil[11])
Azadirachtavar<-raster(lsoil[15])
Balanitesvar<-raster(lsoil[19])
Cordylavar<-raster(lsoil[23])
Faidherbiavar<-raster(lsoil[27])
Acaciavar<-raster(lsoil[3])
names(Acaciavar)<-"Acacia nilotica"
#ggR_P(Acaciavar)
Adansoniavar<-raster(lsoil[7])
names(Adansoniavar)<-"Adansonia digitata"
Anogeissusvar<-raster(lsoil[11])
names(Anogeissusvar)<-"Anogeissus leiocarpus"
Azadirachtavar<-raster(lsoil[15])
names(Azadirachtavar)<-"Azadirachta indica"
Balanitesvar<-raster(lsoil[19])
names(Balanitesvar)<-"Balanites aegyptiaca"
Cordylavar<-raster(lsoil[23])
names(Cordylavar)<-"Cordyla pinnata"
Faidherbiavar<-raster(lsoil[27])
names(Faidherbiavar)<-"Faidherbia albida"
ggarrange(ggR_P(Faidherbiavar),ggR_P(Cordylavar),
ggR_P(Balanitesvar),ggR_P(Azadirachtavar),
common.legend = TRUE)
ggarrange(ggR_P(Acaciavar),ggR_P(Anogeissusvar),ggR_P(Adansoniavar),
common.legend = TRUE)
