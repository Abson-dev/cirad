PA<-as.data.frame(Rasterstack)
PA<-reshape(PA, direction = "long", varying=1:ncol(PA),v.names = c("Pred"),times =1:ncol(PA) )
PA$Species<-rep(espece,each=nrow(PA))
PA<-PA[,c("Pred","Species")]
BaseStat<-as.data.frame(cprop(table(PA)))
BaseStat<-BaseStat %>%
filter(Pred!="Total") %>%
filter(Species!="Ensemble")
BaseStat$Freq<-round(BaseStat$Freq,2)
Pred[["Predict table"]]<-BaseStat
plot<-ggbarplot(BaseStat,
x = "Species", y = "Freq",
fill = "Pred",
color = "Pred",
legend="top",label=TRUE,lab.pos = "in",ggtheme = theme_bw())
Pred[["Plot"]]<-plot
return(Pred)
}
Predi<-reshapePA(de,espece)
de<-stack(MaxentpredFaidherbiabio[["PresenceAbsence"]],MaxentpredBalanitesbio[["PresenceAbsence"]],
MaxentpredAnogeissusbio[["PresenceAbsence"]],MaxentpredAdansoniabio[["PresenceAbsence"]],
MaxentpredAcaciabio[["PresenceAbsence"]])
Predi<-reshapePA(de,espece)
de<-stack(MaxentpredFaidherbiabio[["PresenceAbsence"]],MaxentpredBalanitesbio[["PresenceAbsence"]],
MaxentpredAnogeissusbio[["PresenceAbsence"]],MaxentpredAdansoniabio[["PresenceAbsence"]],
MaxentpredAcaciabio[["PresenceAbsence"]])
d<-as.data.frame(de)
Basc<-reshape(d, direction = "long", varying=1:ncol(de),v.names = c("Pred"),times =1:ncol(de) )
Basc<-reshape(d, direction = "long", varying=1:ncol(d),v.names = c("Pred"),times =1:ncol(d) )
View(Basc)
Basc$Species<-rep(espece,each=nrow(d))
Basc<-Basc[,c("Pred","Species")]
BaseStat<-BaseStat %>%
filter(Pred!="Total") %>%
filter(Species!="Ensemble")
BaseStat$Freq<-round(BaseStat$Freq,2)
reshapePA<-function(Rasterstack,espece){
Pred<-list()
data<-as.data.frame(Rasterstack)
PA<-reshape(data, direction = "long", varying=1:ncol(data),v.names = c("Pred"),times =1:ncol(data) )
PA$Species<-rep(espece,each=nrow(data))
PA<-PA[,c("Pred","Species")]
BaseStat<-as.data.frame(cprop(table(PA)))
BaseStat<-BaseStat %>%
filter(Pred!="Total") %>%
filter(Species!="Ensemble")
BaseStat$Freq<-round(BaseStat$Freq,2)
Pred[["Predict table"]]<-BaseStat
plot<-ggbarplot(BaseStat,
x = "Species", y = "Freq",
fill = "Pred",
color = "Pred",
legend="top",label=TRUE,lab.pos = "in",ggtheme = theme_bw())
Pred[["Plot"]]<-plot
return(Pred)
}
de<-stack(MaxentpredFaidherbiabio[["PresenceAbsence"]],MaxentpredBalanitesbio[["PresenceAbsence"]],
MaxentpredAnogeissusbio[["PresenceAbsence"]],MaxentpredAdansoniabio[["PresenceAbsence"]],
MaxentpredAcaciabio[["PresenceAbsence"]])
espece
Predi<-reshapePA(de,espece)
Predi$`Predict table`
Predi$Plot
r<-stack(MaxentpredFaidherbiabio[["PresenceAbsence"]],
MaxentpredBalanitesbio[["PresenceAbsence"]],
MaxentpredAnogeissusbio[["PresenceAbsence"]],
MaxentpredAdansoniabio[["PresenceAbsence"]],
MaxentpredAcaciabio[["PresenceAbsence"]])
Pred<-reshapePA(r,espece)
Pred$Plot
r<-stack(MaxentpredFaidherbiavar[["PresenceAbsence"]],
MaxentpredBalanitesvar[["PresenceAbsence"]],
MaxentpredAnogeissusvar[["PresenceAbsence"]],
MaxentpredAdansoniavar[["PresenceAbsence"]],
MaxentpredAcaciavar[["PresenceAbsence"]])
Pred<-reshapePA(r,espece)
Pred$Plot
ggarrange(ggR_Predict(MaxentpredFaidherbiavar[[espece[1]]]),ggR_Predict(MaxentpredBalanitesvar[[espece[2]]]),ggR_Predict(MaxentpredAnogeissusvar[[espece[3]]]),ggR_Predict(MaxentpredAdansoniavar[[espece[4]]]),
ggR_Predict(MaxentpredAcaciavar[[espece[5]]]),common.legend = TRUE)
Base_Faidherbia_Z<-Base$`Faidherbia albida`
Base_Balanites_Z<-Base$`Balanites aegyptiaca`
Base_Anogeissus_Z<-Base$`Anogeissus leiocarpus`
Base_Adansonia_Z<-Base$`Adansonia digitata`
Base_Acacia_Z<-Base$`Acacia nilotica`
names(Base_Faidherbia_Z)<-c("lon","lat","Faidherbia")
names(Base_Anogeissus_Z)<-c("lon","lat","Anogeissus")
names(Base_Adansonia_Z)<-c("lon","lat","Adansonia")
names(Base_Balanites_Z)<-c("lon","lat","Balanites")
names(Base_Acacia_Z)<-c("lon","lat","Acacia")
# make a SpatialPointsDataFrame object from data.frame
########"bioclim
pa_dataF <- st_as_sf(Base_Faidherbia_Z, coords = c("lon","lat"), crs = crs(bioclim$Faidherbia_albida))
pa_dataB <- st_as_sf(Base_Balanites_Z, coords = c("lon","lat"), crs = crs(bioclim$Balanites_aegyptiaca))
pa_dataAno <- st_as_sf(Base_Anogeissus_Z, coords = c("lon","lat"), crs = crs(bioclim$Anogeissus_leiocarpus))
pa_dataAdan <- st_as_sf(Base_Adansonia_Z, coords = c("lon","lat"), crs = crs(bioclim$Adansonia_digitata))
pa_dataAca <- st_as_sf(Base_Acacia_Z, coords = c("lon","lat"), crs = crs(bioclim$Acacia_nilotica))
########### ajout des variables paysagÃ¨res
pa_dataFVar <- st_as_sf(Base_Faidherbia_Z, coords = c("lon","lat"), crs = crs(var_spatiale$Faidherbia_albida))
pa_dataBVar <- st_as_sf(Base_Balanites_Z, coords = c("lon","lat"), crs = crs(var_spatiale$Balanites_aegyptiaca))
pa_dataAnoVar <- st_as_sf(Base_Anogeissus_Z, coords = c("lon","lat"), crs = crs(var_spatiale$Anogeissus_leiocarpus))
pa_dataAdanVar <- st_as_sf(Base_Adansonia_Z, coords = c("lon","lat"), crs = crs(var_spatiale$Adansonia_digitata))
pa_dataAcaVar <- st_as_sf(Base_Acacia_Z, coords = c("lon","lat"), crs = crs(var_spatiale$Acacia_nilotica))
################
# extract the raster values for the species points as a dataframe
mydataF <- raster::extract(bioclim$Faidherbia_albida, pa_dataF, df = TRUE)
mydataB <- raster::extract(bioclim$Balanites_aegyptiaca, pa_dataB, df = TRUE)
mydataAno <- raster::extract(bioclim$Anogeissus_leiocarpus, pa_dataAno, df = TRUE)
mydataAdan <- raster::extract(bioclim$Adansonia_digitata, pa_dataAdan, df = TRUE)
mydataAca <- raster::extract(bioclim$Acacia_nilotica, pa_dataAca, df = TRUE)
# adding species column to the dataframe
mydataF$Faidherbia <- as.factor(pa_dataF$Faidherbia)
mydataF$Sol<-as.factor(mydataF$Sol)
mydataB$Balanites <- as.factor(pa_dataB$Balanites)
mydataB$Sol<-as.factor(mydataB$Sol)
mydataAno$Anogeissus <- as.factor(pa_dataAno$Anogeissus)
mydataAno$Sol<-as.factor(mydataAno$Sol)
mydataAdan$Adansonia<-as.factor(pa_dataAdan$Adansonia)
mydataAdan$Sol<-as.factor(mydataAdan$Sol)
mydataAca$Acacia<-as.factor(pa_dataAca$Acacia)
mydataAca$Sol<-as.factor(mydataAca$Sol)
# remove extra column (ID)
mydataF <- mydataF[,-1]
mydataB <- mydataB[,-1]
mydataAno <- mydataAno[,-1]
mydataAdan <- mydataAdan[,-1]
mydataAca <- mydataAca[,-1]
###################
################
# extract the raster values for the species points as a dataframe
mydataFVar <- raster::extract(var_spatiale$Faidherbia_albida, pa_dataFVar, df = TRUE)
mydataBVar <- raster::extract(var_spatiale$Balanites_aegyptiaca, pa_dataBVar, df = TRUE)
mydataAnoVar <- raster::extract(var_spatiale$Anogeissus_leiocarpus, pa_dataAnoVar, df = TRUE)
mydataAdanVar <- raster::extract(var_spatiale$Adansonia_digitata, pa_dataAdanVar, df = TRUE)
mydataAcaVar <- raster::extract(var_spatiale$Acacia_nilotica, pa_dataAcaVar, df = TRUE)
# adding species column to the dataframe
mydataFVar$Faidherbia <- as.factor(pa_dataFVar$Faidherbia)
mydataFVar$Sol<-as.factor(mydataFVar$Sol)
mydataBVar$Balanites <- as.factor(pa_dataBVar$Balanites)
mydataBVar$Sol<-as.factor(mydataBVar$Sol)
mydataAnoVar$Anogeissus <- as.factor(pa_dataAnoVar$Anogeissus)
mydataAnoVar$Sol<-as.factor(mydataAnoVar$Sol)
mydataAdanVar$Adansonia<-as.factor(pa_dataAdanVar$Adansonia)
mydataAdanVar$Sol<-as.factor(mydataAdanVar$Sol)
mydataAcaVar$Acacia<-as.factor(pa_dataAcaVar$Acacia)
mydataAcaVar$Sol<-as.factor(mydataAcaVar$Sol)
# remove extra column (ID)
mydataFVar <- mydataFVar[,-1]
mydataBVar <- mydataBVar[,-1]
mydataAnoVar <- mydataAnoVar[,-1]
mydataAdanVar <- mydataAdanVar[,-1]
mydataAcaVar <- mydataAcaVar[,-1]
eF_bio <- list()
eF_Var<-list()
me_bio<-list()
me_Var<-list()
RandomForestpredFaidherbiabio<-list()
RandomForestpredFaidherbiavar<-list()
for (i in 1:5) {
testpres <- mydataF[mydataF[fold == i,ncol(mydataF)] == 1, 1:ncol(mydataF)-1]
testbackg <- mydataF[mydataF[fold == i,ncol(mydataF)] == 0, 1:ncol(mydataF)-1]
# testpres[ ,'Sol'] = factor(testpres[ ,'Sol'], levels=1:3)
# testbackg[ ,'Sol'] = factor(testbackg[ ,'Sol'], levels=1:3)
me_bio[[i]] <- randomForest(Faidherbia~., mydataF[fold != i, ], na.action=na.omit)
RandomForestpredFaidherbiabio[[i]] <- predict(bioclim$Faidherbia_albida, me_bio[[i]])
#plot(ps)
#eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, gm)
testpres <- mydataFVar[mydataFVar[fold == i,ncol(mydataFVar)] == 1, 1:ncol(mydataFVar)-1]
testbackg <- mydataFVar[mydataFVar[fold == i,ncol(mydataFVar)] == 0, 1:ncol(mydataFVar)-1]
me_Var[[i]] <- randomForest(Faidherbia~., mydataFVar[fold != i, ], na.action=na.omit)
#eF_Var[[i]] <- dismo::evaluate(testpres, testbackg, gm)
RandomForestpredFaidherbiavar[[i]] <- predict(var_spatiale$Faidherbia_albida, me_Var[[i]])
#plot(ps)
}
par(mfrow=c(1,2))
plot(RandomForestpredFaidherbiabio[[1]])
plot(RandomForestpredFaidherbiavar[[1]])
plot(RandomForestpredFaidherbiabio[[1]])
plot(RandomForestpredFaidherbiavar[[1]])
#plot(ps)
eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, me_bio[[i]])
eF_Var[[i]] <- dismo::evaluate(testpres, testbackg, me_Var[[i]])
names(testpres)
names(testbackg)
testpres <- mydataF[mydataF[fold == i,ncol(mydataF)] == 1, 1:(ncol(mydataF)-2)]
testbackg <- mydataF[mydataF[fold == i,ncol(mydataF)] == 0, 1:(ncol(mydataF)-2)]
names(testpres)
names(testbackg)
#plot(ps)
eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, me_bio[[i]])
ncol(mydataF)
names(mydataF)
# testpres[ ,'Sol'] = factor(testpres[ ,'Sol'], levels=1:3)
# testbackg[ ,'Sol'] = factor(testbackg[ ,'Sol'], levels=1:3)
me_bio[[i]] <- randomForest(Faidherbia~., mydataF[fold != i,-(ncol(mydataF)-1) ], na.action=na.omit)
RandomForestpredFaidherbiabio[[i]] <- predict(bioclim$Faidherbia_albida, me_bio[[i]])
plot(RandomForestpredFaidherbiabio[[5]])
#plot(ps)
eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, me_bio[[i]])
table(mydataF$Faidherbia)
# testpres[ ,'Sol'] = factor(testpres[ ,'Sol'], levels=1:3)
# testbackg[ ,'Sol'] = factor(testbackg[ ,'Sol'], levels=1:3)
me_bio[[i]] <- randomForest(factor(Faidherbia)~., mydataF[fold != i,-(ncol(mydataF)-1) ], na.action=na.omit)
RandomForestpredFaidherbiabio[[i]] <- predict(bioclim$Faidherbia_albida, me_bio[[i]])
#plot(ps)
eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, me_bio[[i]])
plot(RandomForestpredFaidherbiabio[[i]])
# testpres[ ,'Sol'] = factor(testpres[ ,'Sol'], levels=1:3)
# testbackg[ ,'Sol'] = factor(testbackg[ ,'Sol'], levels=1:3)
me_bio[[i]] <- randomForest(as.numeric(Faidherbia)~., mydataF[fold != i,-(ncol(mydataF)-1) ], na.action=na.omit)
RandomForestpredFaidherbiabio[[i]] <- predict(bioclim$Faidherbia_albida, me_bio[[i]])
#plot(ps)
eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, me_bio[[i]])
eF_bio
testpres <- mydataF[mydataF[fold == i,ncol(mydataF)] == 1, 1:(ncol(mydataF)-1)]
testbackg <- mydataF[mydataF[fold == i,ncol(mydataF)] == 0, 1:(ncol(mydataF)-1)]
# testpres[ ,'Sol'] = factor(testpres[ ,'Sol'], levels=1:3)
# testbackg[ ,'Sol'] = factor(testbackg[ ,'Sol'], levels=1:3)
me_bio[[i]] <- randomForest(as.numeric(Faidherbia)~., mydataF[fold != i, ], na.action=na.omit)
RandomForestpredFaidherbiabio[[i]] <- predict(bioclim$Faidherbia_albida, me_bio[[i]])
#plot(ps)
eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, me_bio[[i]])
plot(RandomForestpredFaidherbiabio[[i]])
eF_bio <- list()
eF_Var<-list()
me_bio<-list()
me_Var<-list()
for (i in 1:5) {
testpres <- mydataF[mydataF[fold == i,ncol(mydataF)] == 1, 1:(ncol(mydataF)-1)]
testbackg <- mydataF[mydataF[fold == i,ncol(mydataF)] == 0, 1:(ncol(mydataF)-1)]
me_bio[[i]] <- randomForest(as.numeric(Faidherbia)~., mydataF[fold != i, ], na.action=na.omit)
eF_bio[[i]] <- dismo::evaluate(testpres, testbackg, me_bio[[i]])
testpres <- mydataFVar[mydataFVar[fold == i,ncol(mydataFVar)] == 1, 1:ncol(mydataFVar)-1]
testbackg <- mydataFVar[mydataFVar[fold == i,ncol(mydataFVar)] == 0, 1:ncol(mydataFVar)-1]
me_Var[[i]] <- randomForest(as.numeric(Faidherbia)~., mydataFVar[fold != i, ], na.action=na.omit)
eF_Var[[i]] <- dismo::evaluate(testpres, testbackg, me_Var[[i]])
}
RandomForestpredFaidherbiabio<-list()
RandomForestpredFaidherbiavar<-list()
auc <- sapply(eF_bio, function(x){x@auc})
auc
RandomForestpredFaidherbiabio[[espece[1]]]<-predict(bioclim$Faidherbia_albida, me_bio[[which.max(auc)]])
RandomForestpredFaidherbiabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredFaidherbiabio[["threshold"]]<- threshold(eF_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredFaidherbiabio[["PresenceAbsence"]]<-RandomForestpredFaidherbiabio[[espece[1]]]>RandomForestpredFaidherbiabio[["threshold"]]
auc <- sapply(eF_Var, function(x){x@auc})
RandomForestpredFaidherbiavar[[espece[1]]]<-predict(var_spatiale$Faidherbia_albida, me_Var[[which.max(auc)]])
RandomForestpredFaidherbiavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredFaidherbiavar[["threshold"]]<- threshold(eF_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredFaidherbiavar[["PresenceAbsence"]]<-RandomForestpredFaidherbiavar[[espece[1]]]>RandomForestpredFaidherbiavar[["threshold"]]
#plot(RandomForestpredFaidherbiavar[[espece[1]]]>RandomForestpredFaidherbiavar[["threshold"]])
ggR_Predict2(RandomForestpredFaidherbiabio[[espece[1]]],RandomForestpredFaidherbiavar[[espece[1]]])
PASpecies2(RandomForestpredFaidherbiabio[["PresenceAbsence"]],RandomForestpredFaidherbiavar[["PresenceAbsence"]])
eB_bio <- list()
eB_Var<-list()
meB_bio<-list()
meB_Var<-list()
mydataB
for (i in 1:5) {
testpres <- mydataB[mydataB[fold == i,ncol(mydataB)] == 1, 1:(ncol(mydataB)-1)]
testbackg <- mydataB[mydataB[fold == i,ncol(mydataB)] == 0, 1:(ncol(mydataB)-1)]
meB_bio[[i]] <- randomForest(as.numeric(Balanites)~., mydataB[fold != i, ], na.action=na.omit)
eB_bio[[i]] <- dismo::evaluate(testpres, testbackg, meB_bio[[i]])
testpres <- mydataBVar[mydataBVar[fold == i,ncol(mydataBVar)] == 1, 1:ncol(mydataBVar)-1]
testbackg <- mydataBVar[mydataBVar[fold == i,ncol(mydataBVar)] == 0, 1:ncol(mydataBVar)-1]
meB_Var[[i]] <- randomForest(as.numeric(Balanites)~., mydataBVar[fold != i, ], na.action=na.omit)
eB_Var[[i]] <- dismo::evaluate(testpres, testbackg, meB_Var[[i]])
}
RandomForestpredBalanitesbio<-list()
RandomForestpredBalanitesvar<-list()
auc <- sapply(eB_bio, function(x){x@auc})
RandomForestpredBalanitesbio[[espece[2]]]<-predict(bioclim$Balanites_albida, meB_bio[[which.max(auc)]])
RandomForestpredBalanitesbio<-list()
RandomForestpredBalanitesvar<-list()
auc <- sapply(eB_bio, function(x){x@auc})
auc
RandomForestpredBalanitesbio[[espece[2]]]<-predict(bioclim$Balanites_aegyptiaca, meB_bio[[which.max(auc)]])
RandomForestpredBalanitesbio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredBalanitesbio[["threshold"]]<- threshold(eB_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredBalanitesbio[["PresenceAbsence"]]<-RandomForestpredBalanitesbio[[espece[2]]]>RandomForestpredBalanitesbio[["threshold"]]
auc <- sapply(eB_Var, function(x){x@auc})
RandomForestpredBalanitesvar[[espece[2]]]<-predict(var_spatiale$Balanites_aegyptiaca, meB_Var[[which.max(auc)]])
RandomForestpredBalanitesvar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredBalanitesvar[["threshold"]]<- threshold(eB_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredBalanitesvar[["PresenceAbsence"]]<-RandomForestpredBalanitesvar[[espece[2]]]>RandomForestpredBalanitesvar[["threshold"]]
#plot(RandomForestpredBalanitesvar[[espece[2]]]>RandomForestpredBalanitesvar[["threshold"]])
ggR_Predict2(RandomForestpredBalanitesbio[[espece[2]]],RandomForestpredBalanitesvar[[espece[2]]])
PASpecies2(RandomForestpredBalanitesbio[["PresenceAbsence"]],RandomForestpredBalanitesvar[["PresenceAbsence"]])
eAno_bio <- list()
eAno_Var<-list()
meAno_bio<-list()
meAno_Var<-list()
for (i in 1:5) {
testpres <- mydataAno[mydataAno[fold == i,ncol(mydataAno)] == 1, 1:(ncol(mydataAno)-1)]
testbackg <- mydataAno[mydataAno[fold == i,ncol(mydataAno)] == 0, 1:(ncol(mydataAno)-1)]
meAno_bio[[i]] <- randomForest(as.numeric(Anogeissus)~., mydataAno[fold != i, ], na.action=na.omit)
eAno_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAno_bio[[i]])
testpres <- mydataAnoVar[mydataAnoVar[fold == i,ncol(mydataAnoVar)] == 1, 1:ncol(mydataAnoVar)-1]
testbackg <- mydataAnoVar[mydataAnoVar[fold == i,ncol(mydataAnoVar)] == 0, 1:ncol(mydataAnoVar)-1]
meAno_Var[[i]] <- randomForest(as.numeric(Anogeissus)~., mydataAnoVar[fold != i, ], na.action=na.omit)
eAno_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAno_Var[[i]])
}
RandomForestpredAnogeissusbio<-list()
RandomForestpredAnogeissusvar<-list()
auc <- sapply(eAno_bio, function(x){x@auc})
RandomForestpredAnogeissusbio[[espece[3]]]<-predict(bioclim$Anogeissus_leiocarpus, meAno_bio[[which.max(auc)]])
RandomForestpredAnogeissusbio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAnogeissusbio[["threshold"]]<- threshold(eAno_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAnogeissusbio[["PresenceAbsence"]]<-RandomForestpredAnogeissusbio[[espece[3]]]>RandomForestpredAnogeissusbio[["threshold"]]
auc <- sapply(eAno_Var, function(x){x@auc})
RandomForestpredAnogeissusvar[[espece[3]]]<-predict(var_spatiale$Anogeissus_leiocarpus, meAno_Var[[which.max(auc)]])
RandomForestpredAnogeissusvar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAnogeissusvar[["threshold"]]<- threshold(eAno_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAnogeissusvar[["PresenceAbsence"]]<-RandomForestpredAnogeissusvar[[espece[3]]]>RandomForestpredAnogeissusvar[["threshold"]]
#plot(RandomForestpredAnogeissusvar[[espece[2]]]>RandomForestpredAnogeissusvar[["threshold"]])
ggR_Predict2(RandomForestpredAnogeissusbio[[espece[3]]],RandomForestpredAnogeissusvar[[espece[3]]])
#plot(RandomForestpredAnogeissusvar[[espece[2]]]>RandomForestpredAnogeissusvar[["threshold"]])
ggR_Predict2(RandomForestpredAnogeissusbio[[espece[3]]],RandomForestpredAnogeissusvar[[espece[3]]])
PASpecies2(RandomForestpredAnogeissusbio[["PresenceAbsence"]],RandomForestpredAnogeissusvar[["PresenceAbsence"]])
eAdan_bio <- list()
eAdan_Var<-list()
meAdan_bio<-list()
meAdan_Var<-list()
for (i in 1:5) {
testpres <- mydataAdan[mydataAdan[fold == i,ncol(mydataAdan)] == 1, 1:(ncol(mydataAdan)-1)]
testbackg <- mydataAdan[mydataAdan[fold == i,ncol(mydataAdan)] == 0, 1:(ncol(mydataAdan)-1)]
meAdan_bio[[i]] <- randomForest(as.numeric(Adansonia)~., mydataAdan[fold != i, ], na.action=na.omit)
eAdan_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAdan_bio[[i]])
testpres <- mydataAdanVar[mydataAdanVar[fold == i,ncol(mydataAdanVar)] == 1, 1:ncol(mydataAdanVar)-1]
testbackg <- mydataAdanVar[mydataAdanVar[fold == i,ncol(mydataAdanVar)] == 0, 1:ncol(mydataAdanVar)-1]
meAdan_Var[[i]] <- randomForest(as.numeric(Adansonia)~., mydataAdanVar[fold != i, ], na.action=na.omit)
eAdan_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAdan_Var[[i]])
}
RandomForestpredAdansoniabio<-list()
RandomForestpredAdansoniavar<-list()
auc <- sapply(eAdan_bio, function(x){x@auc})
RandomForestpredAdansoniabio[[espece[4]]]<-predict(bioclim$Adansonia_digitata, meAdan_bio[[which.max(auc)]])
RandomForestpredAdansoniabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAdansoniabio[["threshold"]]<- threshold(eAdan_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAdansoniabio[["PresenceAbsence"]]<-RandomForestpredAdansoniabio[[espece[4]]]>RandomForestpredAdansoniabio[["threshold"]]
auc <- sapply(eAdan_Var, function(x){x@auc})
RandomForestpredAdansoniavar[[espece[4]]]<-predict(var_spatiale$Adansonia_digitata, meAdan_Var[[which.max(auc)]])
RandomForestpredAdansoniavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAdansoniavar[["threshold"]]<- threshold(eAdan_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAdansoniavar[["PresenceAbsence"]]<-RandomForestpredAdansoniavar[[espece[4]]]>RandomForestpredAdansoniavar[["threshold"]]
#plot(RandomForestpredAdansoniavar[[espece[4]]]>RandomForestpredAdansoniavar[["threshold"]])
ggR_Predict2(RandomForestpredAdansoniabio[[espece[4]]],RandomForestpredAdansoniavar[[espece[4]]])
PASpecies2(RandomForestpredAdansoniabio[["PresenceAbsence"]],RandomForestpredAdansoniavar[["PresenceAbsence"]])
eAca_bio <- list()
eAca_Var<-list()
meAca_bio<-list()
meAca_Var<-list()
for (i in 1:5) {
testpres <- mydataAca[mydataAca[fold == i,ncol(mydataAca)] == 1, 1:(ncol(mydataAca)-1)]
testbackg <- mydataAca[mydataAca[fold == i,ncol(mydataAca)] == 0, 1:(ncol(mydataAca)-1)]
meAca_bio[[i]] <- randomForest(as.numeric(Acacia)~., mydataAca[fold != i, ], na.action=na.omit)
eAca_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAca_bio[[i]])
testpres <- mydataAcaVar[mydataAcaVar[fold == i,ncol(mydataAcaVar)] == 1, 1:ncol(mydataAcaVar)-1]
testbackg <- mydataAcaVar[mydataAcaVar[fold == i,ncol(mydataAcaVar)] == 0, 1:ncol(mydataAcaVar)-1]
meAca_Var[[i]] <- randomForest(as.numeric(Acacia)~., mydataAcaVar[fold != i, ], na.action=na.omit)
eAca_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAca_Var[[i]])
}
RandomForestpredAcaciabio<-list()
RandomForestpredAcaciavar<-list()
auc <- sapply(eAca_bio, function(x){x@auc})
RandomForestpredAcaciabio[[espece[5]]]<-predict(bioclim$Acacia_nilotica, meAca_bio[[which.max(auc)]])
RandomForestpredAcaciabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAcaciabio[["threshold"]]<- threshold(eAca_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAcaciabio[["PresenceAbsence"]]<-RandomForestpredAcaciabio[[espece[5]]]>RandomForestpredAcaciabio[["threshold"]]
auc <- sapply(eAca_Var, function(x){x@auc})
RandomForestpredAcaciavar[[espece[5]]]<-predict(var_spatiale$Acacia_nilotica, meAca_Var[[which.max(auc)]])
RandomForestpredAcaciavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAcaciavar[["threshold"]]<- threshold(eAca_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAcaciavar[["PresenceAbsence"]]<-RandomForestpredAcaciavar[[espece[5]]]>RandomForestpredAcaciavar[["threshold"]]
#plot(RandomForestpredAcaciavar[[espece[5]]]>RandomForestpredAcaciavar[["threshold"]])
ggR_Predict2(RandomForestpredAcaciabio[[espece[5]]],RandomForestpredAcaciavar[[espece[5]]])
PASpecies2(RandomForestpredAcaciabio[["PresenceAbsence"]],RandomForestpredAcaciavar[["PresenceAbsence"]])
Evaluation<-data.frame(Echantillon=1:5,AUC=0,Espece="Faidherbia albida",Model="Non")
auc <- sapply(eF_bio, function(x){x@auc})
Evaluation$AUC<-auc
auc <- sapply(eF_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Faidherbia albida",Model="Oui"))
auc <- sapply(eB_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Balanites aegyptiaca",Model="Non"))
auc <- sapply(eB_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Balanites aegyptiaca",Model="Oui"))
auc <- sapply(eAno_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Anogeissus leiocarpus",Model="Non"))
auc <- sapply(eAno_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Anogeissus leiocarpus",Model="Oui"))
auc <- sapply(eAdan_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Adansonia digitata",Model="Non"))
auc <- sapply(eAdan_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Adansonia digitata",Model="Oui"))
auc <- sapply(eAca_bio, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Acacia nilotica",Model="Non"))
auc <- sapply(eAca_Var, function(x){x@auc})
Evaluation<-rbind(Evaluation,data.frame(Echantillon=1:5,AUC=auc,Espece="Acacia nilotica",Model="Oui"))
p <- ggpaired(Evaluation,
x = "Model",
y = "AUC",
color = "Model",
palette = NULL,
line.color = "gray",
line.size = 0.4,
facet.by = "Espece",
short.panel.labs = FALSE)
# Calcul et ajout des p-values
p + stat_compare_means(label = "p.signif",
paired = TRUE) # sÃ©ries appariÃ©es => test de Wilcoxon
names(RandomForestpredFaidherbiabio[[espece[1]]])<-espece[1]
names(RandomForestpredBalanitesbio[[espece[2]]])<-espece[2]
names(RandomForestpredAnogeissusbio[[espece[3]]])<-espece[3]
names(RandomForestpredAdansoniabio[[espece[4]]])<-espece[4]
names(RandomForestpredAcaciabio[[espece[5]]])<-espece[5]
ggarrange(ggR_Predict(RandomForestpredFaidherbiabio[[espece[1]]]),ggR_Predict(RandomForestpredBalanitesbio[[espece[2]]]),ggR_Predict(RandomForestpredAnogeissusbio[[espece[3]]]),ggR_Predict(RandomForestpredAdansoniabio[[espece[4]]]),
ggR_Predict(RandomForestpredAcaciabio[[espece[5]]]),common.legend = TRUE)
names(RandomForestpredFaidherbiabio[["PresenceAbsence"]])<-espece[1]
names(RandomForestpredBalanitesbio[["PresenceAbsence"]])<-espece[2]
names(RandomForestpredAnogeissusbio[["PresenceAbsence"]])<-espece[3]
names(RandomForestpredAdansoniabio[["PresenceAbsence"]])<-espece[4]
names(RandomForestpredAcaciabio[["PresenceAbsence"]])<-espece[5]
ggarrange(PASpecies(RandomForestpredFaidherbiabio[["PresenceAbsence"]]),PASpecies(RandomForestpredBalanitesbio[["PresenceAbsence"]]),PASpecies(RandomForestpredAnogeissusbio[["PresenceAbsence"]]),PASpecies(RandomForestpredAdansoniabio[["PresenceAbsence"]]),
PASpecies(RandomForestpredAcaciabio[["PresenceAbsence"]]),common.legend = TRUE)
r<-stack(RandomForestpredFaidherbiabio[["PresenceAbsence"]],
RandomForestpredBalanitesbio[["PresenceAbsence"]],
RandomForestpredAnogeissusbio[["PresenceAbsence"]],
RandomForestpredAdansoniabio[["PresenceAbsence"]],
RandomForestpredAcaciabio[["PresenceAbsence"]])
Pred<-reshapePA(r,espece)
Pred$Plot
names(RandomForestpredFaidherbiavar[[espece[1]]])<-espece[1]
names(RandomForestpredBalanitesvar[[espece[2]]])<-espece[2]
names(RandomForestpredAnogeissusvar[[espece[3]]])<-espece[3]
names(RandomForestpredAdansoniavar[[espece[4]]])<-espece[4]
names(RandomForestpredAcaciavar[[espece[5]]])<-espece[5]
ggarrange(ggR_Predict(RandomForestpredFaidherbiavar[[espece[1]]]),ggR_Predict(RandomForestpredBalanitesvar[[espece[2]]]),ggR_Predict(RandomForestpredAnogeissusvar[[espece[3]]]),ggR_Predict(RandomForestpredAdansoniavar[[espece[4]]]),
ggR_Predict(RandomForestpredAcaciavar[[espece[5]]]),common.legend = TRUE)
names(RandomForestpredFaidherbiavar[["PresenceAbsence"]])<-espece[1]
names(RandomForestpredBalanitesvar[["PresenceAbsence"]])<-espece[2]
names(RandomForestpredAnogeissusvar[["PresenceAbsence"]])<-espece[3]
names(RandomForestpredAdansoniavar[["PresenceAbsence"]])<-espece[4]
names(RandomForestpredAcaciavar[["PresenceAbsence"]])<-espece[5]
ggarrange(PASpecies(RandomForestpredFaidherbiavar[["PresenceAbsence"]]),PASpecies(RandomForestpredBalanitesvar[["PresenceAbsence"]]),PASpecies(RandomForestpredAnogeissusvar[["PresenceAbsence"]]),PASpecies(RandomForestpredAdansoniavar[["PresenceAbsence"]]),
PASpecies(RandomForestpredAcaciavar[["PresenceAbsence"]]),common.legend = TRUE)
ggarrange(PASpecies(RandomForestpredFaidherbiavar[["PresenceAbsence"]]),PASpecies(RandomForestpredBalanitesvar[["PresenceAbsence"]]),PASpecies(RandomForestpredAnogeissusvar[["PresenceAbsence"]]),PASpecies(RandomForestpredAdansoniavar[["PresenceAbsence"]]),
PASpecies(RandomForestpredAcaciavar[["PresenceAbsence"]]),common.legend = TRUE)
r<-stack(RandomForestpredFaidherbiavar[["PresenceAbsence"]],
RandomForestpredBalanitesvar[["PresenceAbsence"]],
RandomForestpredAnogeissusvar[["PresenceAbsence"]],
RandomForestpredAdansoniavar[["PresenceAbsence"]],
RandomForestpredAcaciavar[["PresenceAbsence"]])
Pred<-reshapePA(r,espece)
Pred$Plot
eAdan_bio <- list()
eAdan_Var<-list()
meAdan_bio<-list()
meAdan_Var<-list()
for (i in 1:5) {
testpres <- mydataAdan[mydataAdan[fold == i,ncol(mydataAdan)] == 1, 1:(ncol(mydataAdan)-1)]
testbackg <- mydataAdan[mydataAdan[fold == i,ncol(mydataAdan)] == 0, 1:(ncol(mydataAdan)-1)]
meAdan_bio[[i]] <- randomForest(as.numeric(Adansonia)~., mydataAdan[fold != i, ], na.action=na.omit)
eAdan_bio[[i]] <- dismo::evaluate(testpres, testbackg, meAdan_bio[[i]])
testpres <- mydataAdanVar[mydataAdanVar[fold == i,ncol(mydataAdanVar)] == 1, 1:ncol(mydataAdanVar)-1]
testbackg <- mydataAdanVar[mydataAdanVar[fold == i,ncol(mydataAdanVar)] == 0, 1:ncol(mydataAdanVar)-1]
meAdan_Var[[i]] <- randomForest(as.numeric(Adansonia)~., mydataAdanVar[fold != i, ], na.action=na.omit)
eAdan_Var[[i]] <- dismo::evaluate(testpres, testbackg, meAdan_Var[[i]])
}
RandomForestpredAdansoniabio<-list()
RandomForestpredAdansoniavar<-list()
auc <- sapply(eAdan_bio, function(x){x@auc})
RandomForestpredAdansoniabio[[espece[4]]]<-predict(bioclim$Adansonia_digitata, meAdan_bio[[which.max(auc)]])
RandomForestpredAdansoniabio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAdansoniabio[["threshold"]]<- threshold(eAdan_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredAdansoniabio[["PresenceAbsence"]]<-RandomForestpredAdansoniabio[[espece[4]]]>RandomForestpredAdansoniabio[["threshold"]]
auc <- sapply(eAdan_Var, function(x){x@auc})
RandomForestpredAdansoniavar[[espece[4]]]<-predict(var_spatiale$Adansonia_digitata, meAdan_Var[[which.max(auc)]])
RandomForestpredAdansoniavar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredAdansoniavar[["threshold"]]<- threshold(eAdan_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredAdansoniavar[["PresenceAbsence"]]<-RandomForestpredAdansoniavar[[espece[4]]]>RandomForestpredAdansoniavar[["threshold"]]
#plot(RandomForestpredAdansoniavar[[espece[4]]]>RandomForestpredAdansoniavar[["threshold"]])
ggR_Predict2(RandomForestpredAdansoniabio[[espece[4]]],RandomForestpredAdansoniavar[[espece[4]]])
PASpecies2(RandomForestpredAdansoniabio[["PresenceAbsence"]],RandomForestpredAdansoniavar[["PresenceAbsence"]])
eB_bio <- list()
eB_Var<-list()
meB_bio<-list()
meB_Var<-list()
mydataB
for (i in 1:5) {
testpres <- mydataB[mydataB[fold == i,ncol(mydataB)] == 1, 1:(ncol(mydataB)-1)]
testbackg <- mydataB[mydataB[fold == i,ncol(mydataB)] == 0, 1:(ncol(mydataB)-1)]
meB_bio[[i]] <- randomForest(as.numeric(Balanites)~., mydataB[fold != i, ], na.action=na.omit)
eB_bio[[i]] <- dismo::evaluate(testpres, testbackg, meB_bio[[i]])
testpres <- mydataBVar[mydataBVar[fold == i,ncol(mydataBVar)] == 1, 1:ncol(mydataBVar)-1]
testbackg <- mydataBVar[mydataBVar[fold == i,ncol(mydataBVar)] == 0, 1:ncol(mydataBVar)-1]
meB_Var[[i]] <- randomForest(as.numeric(Balanites)~., mydataBVar[fold != i, ], na.action=na.omit)
eB_Var[[i]] <- dismo::evaluate(testpres, testbackg, meB_Var[[i]])
}
RandomForestpredBalanitesbio<-list()
RandomForestpredBalanitesvar<-list()
auc <- sapply(eB_bio, function(x){x@auc})
RandomForestpredBalanitesbio[[espece[2]]]<-predict(bioclim$Balanites_aegyptiaca, meB_bio[[which.max(auc)]])
RandomForestpredBalanitesbio[["AUC"]]<-auc[which.max(auc)]
RandomForestpredBalanitesbio[["threshold"]]<- threshold(eB_bio[[which.max(auc)]], 'spec_sens')
RandomForestpredBalanitesbio[["PresenceAbsence"]]<-RandomForestpredBalanitesbio[[espece[2]]]>RandomForestpredBalanitesbio[["threshold"]]
auc <- sapply(eB_Var, function(x){x@auc})
RandomForestpredBalanitesvar[[espece[2]]]<-predict(var_spatiale$Balanites_aegyptiaca, meB_Var[[which.max(auc)]])
RandomForestpredBalanitesvar[["AUC"]]<-auc[which.max(auc)]
RandomForestpredBalanitesvar[["threshold"]]<- threshold(eB_Var[[which.max(auc)]], 'spec_sens')
RandomForestpredBalanitesvar[["PresenceAbsence"]]<-RandomForestpredBalanitesvar[[espece[2]]]>RandomForestpredBalanitesvar[["threshold"]]
#plot(RandomForestpredBalanitesvar[[espece[2]]]>RandomForestpredBalanitesvar[["threshold"]])
ggR_Predict2(RandomForestpredBalanitesbio[[espece[2]]],RandomForestpredBalanitesvar[[espece[2]]])
PASpecies2(RandomForestpredBalanitesbio[["PresenceAbsence"]],RandomForestpredBalanitesvar[["PresenceAbsence"]])
