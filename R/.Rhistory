annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)+
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)+
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100)) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)+
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5) +
scale_fill_gradientn(colours = terrain.colors(100)) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)+
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100))
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100))
worldClim.crop
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T) +
scale_fill_gradientn(colours = terrain.colors(100))
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T,forceCat = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100))
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T) +
scale_fill_gradientn(colours = terrain.colors(100))
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F) +
scale_fill_gradientn(colours = terrain.colors(100))
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T) +
scale_fill_gradientn(colours = terrain.colors(100))
ggplot(map)+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggplot(map) + geom_sf(aes(fill=Zone),colour="green")+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggplot(map) + geom_sf(aes(fill=Zone),colour="black")+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggplot(map) + geom_sf()+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
extent(zone_etude)
extent(worldClim.crop)
extent(zone_etude)<-extent(worldClim.crop)
extent(zone_etude)<-extent(-16.54167,-16.35833,14.45833,14.63333)
class(zone_etude)
my.polygon<-zone_etude
my.polygon@bbox <- as.matrix(extent(worldClim.crop))
extent(my.polygon)
plot(my.polygon)
map<-st_as_sf(my.polygon)
map$Zone<-as.factor(map$Zone)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green")
ggplot(map) + geom_sf()+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggplot(map) + geom_sf()+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T,ggLayer = TRUE)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
plot(my.polygon)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = muted("blue"),
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) + +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=F, stretch = "hist",hue=0.5,ggLayer = F) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=F, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = muted("blue"),
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=F, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
library(FactoMineR)
library(ade4)
data("housetasks")
View(housetasks)
dataFZ1
map1
View(map1)
BaseAFC_FZ1<-map1
library(sf)
BaseAFC_FZ1<-st_drop_geometry(BaseAFC_FZ1)
res.caFZ1 <- CA(BaseAFC_FZ1,graph = FALSE)
data(poison)
View(poison)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:ncol(BaseAFC_FZ1), quali.sup = 1,graph = F)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:ncol(BaseAFC_FZ1), quali.sup = 1,graph = FALSE)
ncol(BaseAFC_FZ1)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:20, quali.sup = 1,graph = FALSE)
library(ade4)
library(FactoMineR)
##########Base de Faidherbia albida dans les zones avec les variables bioclimatiques
#zone 1
BaseAFC_FZ1<-map1
BaseAFC_FZ1<-st_drop_geometry(BaseAFC_FZ1)
View(BaseAFC_FZ1)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:20, quali.sup = 1,graph = FALSE)
class(BaseAFC_FZ1)
dim(BaseAFC_FZ1)
BaseAFC_FZ1<-as.data.frame(BaseAFC_FZ1)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:20, quali.sup = 1,graph = FALSE)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,graph = FALSE)
data(tea)
View(tea)
res.mca <- MCA(tea,quanti.sup=19,quali.sup=20:36)
require(Factoshiny)
res <- MCAshiny(tea)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,quanti.sup=2:20,quali.sup=1,graph = FALSE)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,quanti.sup=2:10,quali.sup=1,graph = FALSE)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,quanti.sup=2,quali.sup=1,graph = FALSE)
library(funModeling)
cross_plot(BaseAFC_FZ1,input="bio1",target = "Faidherbia")
#############"
Bcross<-BaseAFC_FZ1
Bcross$bio1_G=equal_freq(var=Bcross$bio1, n_bins = 3)
cross_plot(Bcross,input="bio1_G",target = "Faidherbia")
Bcross$bio2_G=equal_freq(var=Bcross$bio2, n_bins = 3)
cross_plot(Bcross,input="bio2_G",target = "Faidherbia")
Bcross$bio3_G=equal_freq(var=Bcross$bio3, n_bins = 3)
cross_plot(Bcross,input="bio3_G",target = "Faidherbia")
Bcross$bio4_G=equal_freq(var=Bcross$bio4, n_bins = 3)
cross_plot(Bcross,input="bio4_G",target = "Faidherbia")
Bcross$bio5_G=equal_freq(var=Bcross$bio5, n_bins = 3)
Bcross$bio5_G=equal_freq(var=Bcross$bio5, n_bins = 2)
cross_plot(Bcross,input="bio5_G",target = "Faidherbia")
Bcross$bio6_G=equal_freq(var=Bcross$bio6, n_bins = 3)
Bcross$bio6_G=equal_freq(var=Bcross$bio6, n_bins = 2)
cross_plot(Bcross,input="bio6_G",target = "Faidherbia")
res.mcaFZ1 <- MCA(BaseAFC_FZ1)
data(tea)
res.mca <- MCA(tea,quanti.sup=19,quali.sup=20:36)
du<-duplicated(BaseAFC_FZ1,1:ncol(BaseAFC_FZ1))
du<-duplicated(BaseAFC_FZ1)
table(du)
Base_Faidherbia_Z
cross_plot_Adansonia_3<-cross_plot(Base_Espece_df, input="Slope_mean_groupe", target="Adansonia_digitata", auto_binning = F,path_out="C:\\Users\\Hp\\OneDrive\\redactions")
library(dplyr)
library(funModeling)
cross_plot_Adansonia_3<-cross_plot(Base_Espece_df, input="Slope_mean_groupe", target="Adansonia_digitata", auto_binning = F,path_out="C:\\Users\\Hp\\OneDrive\\redactions")
#Recodage en présence absence
#présence=1 et absence=0
#
Base_Espece<-Species
Base_Espece$Faidherbia_albida<-if_else(Base_Espece$Species =="Faidherbia albida","1","0")
#Balanites aegyptiaca
Base_Espece$Balanites_aegyptiaca<-if_else(Base_Espece$Species =="Balanites aegyptiaca","1","0")
#Anogeissus leiocarpus
Base_Espece$Anogeissus_leiocarpus<-if_else(Base_Espece$Species =="Anogeissus leiocarpus","1","0")
#Adansonia digitata
Base_Espece$Adansonia_digitata<-if_else(Base_Espece$Species =="Adansonia digitata","1","0")
#Acacia nilotica
Base_Espece$Acacia_nilotica<-if_else(Base_Espece$Species =="Acacia nilotica","1","0")
def_espece<-df_status(Base_Espece_df)
Base_Espece_df<-st_drop_geometry(Base_Espece)
library(sf)
Base_Espece_df<-st_drop_geometry(Base_Espece)
Base_Espece_df$Faidherbia_albida<-as.factor(Base_Espece_df$Faidherbia_albida)
Base_Espece_df$Balanites_aegyptiaca<-as.factor(Base_Espece_df$Balanites_aegyptiaca)
Base_Espece_df$Anogeissus_leiocarpus<-as.factor(Base_Espece_df$Anogeissus_leiocarpus)
Base_Espece_df$Adansonia_digitata<-as.factor(Base_Espece_df$Adansonia_digitata)
Base_Espece_df$Acacia_nilotica<-as.factor(Base_Espece_df$Acacia_nilotica)
Base_Espece_df$Zone<-as.factor(Base_Espece_df$Zone)
Base_Espece_df$Slope_mean_groupe=equal_freq(var=Base_Espece_df$Slope_mean, n_bins = 3)
cross_plot_Adansonia_3<-cross_plot(Base_Espece_df, input="Slope_mean_groupe", target="Adansonia_digitata", auto_binning = F,path_out="C:\\Users\\Hp\\OneDrive\\redactions")
cross_plot_Adansonia_3<-cross_plot(Base_Espece_df, input="Slope_mean_groupe", target="Adansonia_digitata", auto_binning = F,path_out="C:\\Users\\Hp\\OneDrive\\redactions")
cross_plot_Anogeissus_3<-cross_plot(Base_Espece_df, input="Slope_mean_groupe", target="Anogeissus_leiocarpus", auto_binning = F,path_out="C:\\Users\\Hp\\OneDrive\\redactions")
cross_plot_Acacia_3<-cross_plot(Base_Espece_df, input="Slope_mean_groupe", target="Acacia_nilotica", auto_binning = F,path_out="C:\\Users\\Hp\\OneDrive\\redactions")
###################Faidherbia albida dans les zones
#zone d'étude
Base_Faidherbia_Z<-data_df %>%
select(xcoord,ycoord,Faidherbia_albida)
sp::coordinates(FZ) <-~lon+lat
##################fin zones
#Transform data as SpatialPointDataFrame
##zone d'étude
FZ<-Base_Faidherbia_Z
sp::coordinates(FZ) <-~lon+lat
names(Base_Faidherbia_Z)<-c("lon","lat","Faidherbia")
##################fin zones
#Transform data as SpatialPointDataFrame
##zone d'étude
FZ<-Base_Faidherbia_Z
sp::coordinates(FZ) <-~lon+lat
sp::proj4string(FZ) <-"+proj=longlat +datum=WGS84"
##############"fin zones
#extract covariables, combine with dataset
dataFZ<-CovarExtract(x=FZ,cov.paths = l1)
dataFZ<-SDMSelect::CovarExtract(x=FZ,cov.paths = l1)
#################################################
########↨importation des données de worldclim
###1)prendre les fichiers .tif(raster) qui se trouvent dans le dossier indiquer
l1<-list.files("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\",patt="\\.tif")
l1<-sprintf("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\%s",l1)
###2) utiliser la fonction stack pour rendre RasterStack
worlClim<-stack(l1)
###2) utiliser la fonction stack pour rendre RasterStack
worlClim<-raster::stack(l1)
l1
plot(worldClim.crop,1:9)
plot(worldClim.crop,10:19)
worldClim.crop
###2) utiliser la fonction stack pour rendre RasterStack
worlClim<-raster::stack(l1)
#################################################
########↨importation des données de worldclim
###1)prendre les fichiers .tif(raster) qui se trouvent dans le dossier indiquer
l1<-list.files("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\",patt="\\.tif")
l1<-sprintf("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\%s",l1)
###2) utiliser la fonction stack pour rendre RasterStack
worlClim<-raster::stack(l1)
###3)connaitre l'étendue de notre zone d'étude (ext)
ext<-extent(Species)
###3)connaitre l'étendue de notre zone d'étude (ext)
ext<-raster::extent(Species)
###4)utiliser crop pour mettre a la même zone d'étude les données de worlclim
library(raster)
###4)utiliser crop pour mettre a la même zone d'étude les données de worlclim
library(raster)
worldClim.crop<-crop(worlClim,ext)
dataFZ<-SDMSelect::CovarExtract(x=FZ,cov.paths = l1)
dataFaidZ<-dataFZ@data
View(dataFaidZ)
# require(Factoshiny)
# res <- MCAshiny(tea)
##########Base de Faidherbia albida dans les zones avec les variables bioclimatiques
#zone 1
BaseAFC_FZ1<-dataFaidZ
dim(BaseAFC_FZ1)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,quanti.sup=2:20,quali.sup=1,graph = FALSE)
library(FactoMineR)
library(ade4)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,quanti.sup=2:20,quali.sup=1,graph = FALSE)
res.mcaFZ1 <- CA(BaseAFC_FZ1,quanti.sup=2:20,quali.sup=1,graph = FALSE)
du<-duplicated(BaseAFC_FZ1)
table(du)
library(dismo)
library(maptools)
predictors<-stack(l1)
file<-file.path(system.file(package = "dismo"),"ex/bradypus.csv")
bradypus<-read.table(file,header = T,sep = ',')
bradypus
names(bradypus)
Species
View(data_df)
Faidherbia<-Base_Faidherbia_Z
names(bradypus)
#file<-file.path(system.file(package = "dismo"),"ex/bradypus.csv")
Faidherbia<-Base_Faidherbia_Z
names(Faidherbia)
Faidherbia<-Faidherbia %>%
select(lon,lat)
Faidherbia<-Faidherbia[,1:2]
View(Faidherbia)
prevals<-extract(predictors,Faidherbia)
class(prevals)
############
bradypus<-bradypus[,-1]
pred<-stack(list.files(file.path(system.file(package = "dismo"),'ex'),pattern='grd$',full.names = T))
pres<-extract(pred,bradypus)
class(pres)
set.seed(0)
backgr<-randomPoints(pred,500)
abs<-extract(pred,backgr)
pb<-c(rep(1,nrow(pres)),rbind(0,nrow(abs)))
sdmdata<-data.frame(cbind(pb,rbind(pres,abs)))
View(sdmdata)
# require(Factoshiny)
# res <- MCAshiny(tea)
##########Base de Faidherbia albida dans les zones avec les variables bioclimatiques
#zone 1
SDMdata_FZ1<-dataFZ1@data
set.seed(0)
group<-kfold(SDMdata_FZ1,5)
SDMdata_FZ1_train<-SDMdata_FZ1[group!=1,]
SDMdata_FZ1_test<-SDMdata_FZ1[group==1,]
dim(SDMdata_FZ1_train)
dim(SDMdata_FZ1_test)
#######bioclim
bcSDMdata_FZ1<-bioclim(SDMdata_FZ1_train)
plot(bcSDMdata_FZ1,a=1,b=2,p=0.8)
plot(bcSDMdata_FZ1,a=2,b=5,p=0.8)
ext
ext<-extent(-16.53864,-16.35454,14.45461,14.63543)
# class      : Extent
# xmin       : -16.53864
# xmax       : -16.35454
# ymin       : 14.45461
# ymax       : 14.63543
set.seed(0)
pred_nf<-predictors
backg<-randomPoints(pred_nf,n=1000,ext=ext,extf=1.25)
pred_nf<-predictors
backg<-randomPoints(pred_nf,n=1000,ext=ext,extf=1.25)
# class      : Extent
# xmin       : -16.53864
# xmax       : -16.35454
# ymin       : 14.45461
# ymax       : 14.63543
set.seed(0)
backg<-randomPoints(pred_nf,n=1000,ext=ext,extf=1.25)
Faidherbia_pres<-Base_Faidherbia_Z1 %>%
filter(Faidherbia==1)
Faidherbia_abs<-Base_Faidherbia_Z1 %>%
filter(Faidherbia==0)
Faidherbia_pres<-Faidherbia_pres[,1:2]
Faidherbia_abs<-Faidherbia_abs[,1:2]
presvals<-extract(predictors,Faidherbia_pres)
set.seed(0)
group<-kfold(Faidherbia_pres,5)
Faidherbia_pres_train<-Faidherbia_pres[group!=1,]
dim(Faidherbia_pres)
Faidherbia_pres_test<-Faidherbia_pres[group==1,]
dim(SDMdata_FZ1_test)
dim(Faidherbia_pres_train)
dim(Faidherbia_pres_test)
ext<-extent(-16.53864,-16.35454,14.45461,14.63543)
#######bioclim
bcSDMdata_FZ1<-bioclim(pred_nf,Faidherbia_pres_train)
# class      : Extent
# xmin       : -16.53864
# xmax       : -16.35454
# ymin       : 14.45461
# ymax       : 14.63543
set.seed(0)
backg<-Faidherbia_abs
colnames(backg)=c("lon","lat")
group<-kfold(backg,5)
backg_train<-backg[group!=1]
backg_test<-backg[group==1]
group<-kfold(backg,5)
backg_train<-backg[group!=1]
backg_test<-backg[group==1]
plot(bcSDMdata_FZ1,a=2,b=5,p=0.85)
names(backg)
group
backg_train<-backg[group!=1,]
backg_test<-backg[group==1,]
evalFZ1<-evaluate(Faidherbia_pres_test,backg_test,bcSDMdata_FZ1,pred_nf)
evalFZ1
##trouver un seuil
tr<-threshold(evalFZ1,'spec_sens')
pb<-predict(pred_nf,bcSDMdata_FZ1,ext=ext,progress='')
pb
par(mfrow=c(1,2))
plot(pb,main='Bioclim,raw values')
plot(zone_etude1,add=TRUE,border='dark grey')
plot(pb>tr,main='presence/absence')
plot(zone_etude1,add=TRUE, border='dark grey')
points(Faidherbia_pres_train, pch='+')
Faidherbia_pres<-Base_Faidherbia_Z %>%
filter(Faidherbia==1)
Faidherbia_pres<-Faidherbia_pres[,1:2]
Faidherbia_abs<-Base_Faidherbia_Z1 %>%
filter(Faidherbia==0)
Faidherbia_abs<-Faidherbia_abs[,1:2]
Faidherbia_abs<-Base_Faidherbia_Z %>%
filter(Faidherbia==0)
Faidherbia_abs<-Faidherbia_abs[,1:2]
set.seed(0)
group<-kfold(Faidherbia_pres,5)
Faidherbia_pres_train<-Faidherbia_pres[group!=1,]
dim(Faidherbia_pres_train)
Faidherbia_pres_test<-Faidherbia_pres[group==1,]
dim(Faidherbia_pres_test)
ext<-extent(-16.53864,-16.35454,14.45461,14.63543)
# class      : Extent
# xmin       : -16.53864
# xmax       : -16.35454
# ymin       : 14.45461
# ymax       : 14.63543
set.seed(0)
pred_nf<-predictors
backg<-Faidherbia_abs
colnames(backg)=c("lon","lat")
group<-kfold(backg,5)
backg_train<-backg[group!=1,]
backg_test<-backg[group==1,]
#######bioclim
bcSDMdata_FZ1<-bioclim(pred_nf,Faidherbia_pres_train)
plot(bcSDMdata_FZ1,a=2,b=5,p=0.85)
evalFZ1<-evaluate(Faidherbia_pres_test,backg_test,bcSDMdata_FZ1,pred_nf)
evalFZ1
##trouver un seuil
tr<-threshold(evalFZ1,'spec_sens')
pb<-predict(pred_nf,bcSDMdata_FZ1,ext=ext,progress='')
pb
par(mfrow=c(1,2))
plot(pb,main='Bioclim,raw values')
plot(zone_etude1,add=TRUE,border='dark grey')
plot(pb>tr,main='presence/absence')
plot(zone_etude1,add=TRUE, border='dark grey')
points(Faidherbia_pres_train, pch='+')
library(RStoolbox)
ggR(pb, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(pb, 2, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(pb, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
plot(pb,main='Bioclim,raw values')
plot(pb>tr,main='presence/absence')
