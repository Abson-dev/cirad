sp::coordinates(AnogeissusPr) <-~lon+lat
sp::proj4string(AnogeissusPr) <-"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
#############
Base_Adansonia_Z<-Base_Espece_df[,c("xcoord","ycoord","Adansonia_digitata")]
names(Base_Adansonia_Z)<-c("lon","lat","Adansonia.digitata")
AdansoniaPr<- Base_Adansonia_Z %>%
filter(Adansonia.digitata ==1)
#Transform data as SpatialPointDataFrame
sp::coordinates(AdansoniaPr) <-~lon+lat
sp::proj4string(AdansoniaPr) <-"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
###
Base_Acacia_Z<-Base_Espece_df[,c("xcoord","ycoord","Acacia_nilotica")]
names(Base_Acacia_Z)<-c("lon","lat","Acacia.nilotica")
AcaciaPr<- Base_Acacia_Z %>%
filter(Acacia.nilotica ==1)
#Transform data as SpatialPointDataFrame
sp::coordinates(AcaciaPr) <-~lon+lat
sp::proj4string(AcaciaPr) <-"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
# SINT<-projectRaster(SINT.crop,P.crop)
# SOS<-projectRaster(SOS.crop,P.crop)
# P<-P.crop
# #,PHIHOX,SLTPPT,NTO,P,SNDPPT
# SoilGrid.crop<-stack(AETI,SINT,SOS,NBWP,CLYPPT,ORCDRC,PHIHOX,SLTPPT,NTO,SNDPPT,P)
# SoilGrid.crop
############## ENFA
########### Voir le fichier BlockCV_for_SDM_Soil.R
#######Faidherbia albida
#FaidherbiaPr@bbox <-as.matrix(extent(SoilGrid.crop))
glc <- GLcenfa(x = ENFA_var)
library(CENFA)
### Ecological Niche Factor Analysis(ENFA)
library(adehabitatHS)
# SINT<-projectRaster(SINT.crop,P.crop)
# SOS<-projectRaster(SOS.crop,P.crop)
# P<-P.crop
# #,PHIHOX,SLTPPT,NTO,P,SNDPPT
# SoilGrid.crop<-stack(AETI,SINT,SOS,NBWP,CLYPPT,ORCDRC,PHIHOX,SLTPPT,NTO,SNDPPT,P)
# SoilGrid.crop
############## ENFA
########### Voir le fichier BlockCV_for_SDM_Soil.R
#######Faidherbia albida
#FaidherbiaPr@bbox <-as.matrix(extent(SoilGrid.crop))
glc <- GLcenfa(x = ENFA_var)
FaidherbiaPr@data$Faidherbia.albida<-as.numeric(FaidherbiaPr@data$Faidherbia.albida)
mod.enfa <- enfa(x = ENFA_var, s.dat = FaidherbiaPr, field = "Faidherbia.albida")
mod.cnfa <- cnfa(x = ENFA_var, s.dat = FaidherbiaPr, field = "Faidherbia.albida")
mod.cnfa
s.map <- sensitivity_map(mod.cnfa)
# SINT<-projectRaster(SINT.crop,P.crop)
# SOS<-projectRaster(SOS.crop,P.crop)
# P<-P.crop
# #,PHIHOX,SLTPPT,NTO,P,SNDPPT
# SoilGrid.crop<-stack(AETI,SINT,SOS,NBWP,CLYPPT,ORCDRC,PHIHOX,SLTPPT,NTO,SNDPPT,P)
# SoilGrid.crop
############## ENFA
########### Voir le fichier BlockCV_for_SDM_Soil.R
#######Faidherbia albida
#FaidherbiaPr@bbox <-as.matrix(extent(SoilGrid.crop))
glc <- GLcenfa(x = ENFA_var)
FaidherbiaPr@data$Faidherbia.albida<-as.numeric(FaidherbiaPr@data$Faidherbia.albida)
mod.enfa <- enfa(x = ENFA_var, s.dat = FaidherbiaPr, field = "Faidherbia.albida")
# SINT<-projectRaster(SINT.crop,P.crop)
# SOS<-projectRaster(SOS.crop,P.crop)
# P<-P.crop
# #,PHIHOX,SLTPPT,NTO,P,SNDPPT
# SoilGrid.crop<-stack(AETI,SINT,SOS,NBWP,CLYPPT,ORCDRC,PHIHOX,SLTPPT,NTO,SNDPPT,P)
# SoilGrid.crop
############## ENFA
########### Voir le fichier BlockCV_for_SDM_Soil.R
#######Faidherbia albida
#FaidherbiaPr@bbox <-as.matrix(extent(SoilGrid.crop))
glc <- GLcenfa(x = SoilGrid.crop)
mod.enfa <- enfa(x = SoilGrid.crop, s.dat = FaidherbiaPr, field = "Faidherbia.albida")
mod.enfa <- CENFA::enfa(x = SoilGrid.crop, s.dat = FaidherbiaPr, field = "Faidherbia.albida")
scatter(x = mod.enfa, y = glc)
CENFA::scatter(x = mod.enfa, y = glc)
# SINT<-projectRaster(SINT.crop,P.crop)
# SOS<-projectRaster(SOS.crop,P.crop)
# P<-P.crop
# #,PHIHOX,SLTPPT,NTO,P,SNDPPT
# SoilGrid.crop<-stack(AETI,SINT,SOS,NBWP,CLYPPT,ORCDRC,PHIHOX,SLTPPT,NTO,SNDPPT,P)
# SoilGrid.crop
############## ENFA
########### Voir le fichier BlockCV_for_SDM_Soil.R
#######Faidherbia albida
#FaidherbiaPr@bbox <-as.matrix(extent(SoilGrid.crop))
glc <- GLcenfa(x = ENFA_var)
FaidherbiaPr@data$Faidherbia.albida<-as.numeric(FaidherbiaPr@data$Faidherbia.albida)
mod.enfa <- CENFA::enfa(x = ENFA_var, s.dat = FaidherbiaPr, field = "Faidherbia.albida")
mod.enfa
CENFA::scatter(x = mod.enfa, y = glc)
# SINT<-projectRaster(SINT.crop,P.crop)
# SOS<-projectRaster(SOS.crop,P.crop)
# P<-P.crop
# #,PHIHOX,SLTPPT,NTO,P,SNDPPT
# SoilGrid.crop<-stack(AETI,SINT,SOS,NBWP,CLYPPT,ORCDRC,PHIHOX,SLTPPT,NTO,SNDPPT,P)
# SoilGrid.crop
############## ENFA
########### Voir le fichier BlockCV_for_SDM_Soil.R
#######Faidherbia albida
#FaidherbiaPr@bbox <-as.matrix(extent(SoilGrid.crop))
nlayers(ENFA_var)
CENFA::scatter(x = mod.enfa, y = glc,n=nlayers(ENFA_var),p=1)
CENFA::scatter(x = mod.enfa, y = glc,n=36,p=1)
CENFA::scatter(x = mod.enfa, y = glc,n=35,p=1)
CENFA::mod.cnfa <- cnfa(x = ENFA_var, s.dat = FaidherbiaPr, field = "Faidherbia.albida")
mod.cnfa <- CENFA::cnfa(x = ENFA_var, s.dat = FaidherbiaPr, field = "Faidherbia.albida")
s.map <- CENFA::sensitivity_map(mod.cnfa)
############## Balanites
#BalanitesPr@bbox <-as.matrix(extent(SoilGrid.crop))
#Aglc <- GLcenfa(x = SoilGrid.crop)
BalanitesPr@data$Balanites.aegyptiaca<-as.numeric(BalanitesPr@data$Balanites.aegyptiaca)
mod.enfaB <- enfa(x = SoilGrid.crop, s.dat = BalanitesPr, field = "Balanites.aegyptiaca")
mod.enfaB <- CENFA::enfa(x = ENFA_var, s.dat = BalanitesPr, field = "Balanites.aegyptiaca")
CENFA::scatter(x = mod.enfaB, y = glc,n=35,p=1)
####### Anogeissus.leiocarpus
#glc <- GLcenfa(x = SoilGrid.crop)
AnogeissusPr@data$Anogeissus.leiocarpus<-as.numeric(AnogeissusPr@data$Anogeissus.leiocarpus)
mod.enfaAno <- enfa(x = ENFA_var, s.dat = AnogeissusPr, field = "Anogeissus.leiocarpus")
mod.enfaAno <- CENFA::enfa(x = ENFA_var, s.dat = AnogeissusPr, field = "Anogeissus.leiocarpus")
CENFA::scatter(x = mod.enfaAno, y = glc,n=35,p=1)
######## Adansonia.digitata
AdansoniaPr@data$Adansonia.digitata<-as.numeric(AdansoniaPr@data$Adansonia.digitata)
mod.enfaAdan <- CENFA::enfa(x = ENFA_var, s.dat = AdansoniaPr, field = "Adansonia.digitata")
CENFA::scatter(x = mod.enfaAdan, y = glc)
CENFA::scatter(x = mod.enfaAdan, y = glc,n=35,p=1)
########### Acacia.nilotica
AcaciaPr@data$Acacia.nilotica<-as.numeric(AcaciaPr@data$Acacia.nilotica)
mod.enfaAca <- CENFA::enfa(x = ENFA_var, s.dat = AcaciaPr, field = "Acacia.nilotica")
CENFA::scatter(x = mod.enfaAca, y = glc,n=35,p=1)
scatter(x = mod.enfa, y = glc, n=11,p=1) #Faidherbia.albida
CENFA::scatter(x = mod.enfa, y = glc, n=11,p=1) #Faidherbia.albida
CENFA::scatter(x = mod.enfa, y = glc, n=35,p=1) #Faidherbia.albida
title("Faidherbia albida")
CENFA::scatter(x = mod.enfaB, y = glc, n=35,p=1) #Balanites.aegyptiaca
title("Balanites aegyptiaca")
CENFA::scatter(x = mod.enfaAno, y = glc, n=35,p=1) #Anogeissus.leiocarpus
title("Anogeissus leiocarpus")
CENFA::scatter(x = mod.enfaAdan, y = glc, n=35,p=1) #Adansonia.digitata
title("Adansonia digitata")
CENFA::scatter(x = mod.enfaAca, y = glc, n=35,p=1) #Acacia.nilotica
title("Acacia nilotica")
Cov<-CENFA::cov.enfa(mod.enfa)
View(Cov)
#Cov<-CENFA::cov.enfa(mod.enfa)
# correlation matrix
Z <- CENFA::parScale(ENFA_var)
mat <- CENFA::parCov(Z)
View(mat)
mat <- CENFA::parCov(ENFA_var)
mat <- CENFA::parCov(Z)
mat1 <- CENFA::parCov(ENFA_var)
View(mat1)
ggcorrplot(mat,ggtheme = ggplot2::theme_gray,
hc.order = TRUE,
type = "lower",
lab = TRUE,
colors = c("#6D9EC1", "white", "#E46726")) +
ggtitle("(a)") + theme(plot.title = element_text(hjust = 0.5, size = 10))
ggpubr::ggcorrplot(mat,ggtheme = ggplot2::theme_gray,
hc.order = TRUE,
type = "lower",
lab = TRUE,
colors = c("#6D9EC1", "white", "#E46726")) +
ggtitle("(a)") + theme(plot.title = element_text(hjust = 0.5, size = 10))
install.packages("ggpubr")
library(ggcorrplot)
ggcorrplot::ggcorrplot(mat,ggtheme = ggplot2::theme_gray,
hc.order = TRUE,
type = "lower",
lab = TRUE,
colors = c("#6D9EC1", "white", "#E46726")) +
ggtitle("(a)") + theme(plot.title = element_text(hjust = 0.5, size = 10))
ggcorrplot::ggcorrplot(mat,ggtheme = ggplot2::theme_gray,
hc.order = TRUE,
type = "lower",
lab = FALSE,
colors = c("#6D9EC1", "white", "#E46726")) +
ggtitle("(a)") + theme(plot.title = element_text(hjust = 0.5, size = 10))
View(mat1)
pa_dataF <- st_as_sf(Base_Faidherbia_Z, coords = c("lon","lat"), crs = crs(ENFA_var))
filename<-paste0("C:\\Users\\Hp\\OneDrive\\cirad\\Data\\BD_Arbre","\\arbres_diohine_mai2018_par_Zone_OK_BON.shp")
Species<-st_read(filename,quiet = T)
#définir une fonction
Base_Espece<-Species
#Faidherbia_albida
Base_Espece$Faidherbia_albida<-as.factor(if_else(Base_Espece$Species =="Faidherbia albida","1","0"))
#Balanites aegyptiaca
Base_Espece$Balanites_aegyptiaca<-as.factor(if_else(Base_Espece$Species =="Balanites aegyptiaca","1","0"))
#Anogeissus leiocarpus
Base_Espece$Anogeissus_leiocarpus<-as.factor(if_else(Base_Espece$Species =="Anogeissus leiocarpus","1","0"))
#Adansonia digitata
Base_Espece$Adansonia_digitata<-as.factor(if_else(Base_Espece$Species =="Adansonia digitata","1","0"))
#Acacia nilotica
Base_Espece$Acacia_nilotica<-as.factor(if_else(Base_Espece$Species =="Acacia nilotica","1","0"))
######################## définir une fonction
Base_Espece_df<-st_drop_geometry(Base_Espece)
Base_Faidherbia_Z<-Base_Espece_df[,c("xcoord","ycoord","Faidherbia_albida")]
names(Base_Faidherbia_Z)<-c("lon","lat","Faidherbia")
Base_Balanites_Z<-Base_Espece_df[,c("xcoord","ycoord","Balanites_aegyptiaca")]
names(Base_Balanites_Z)<-c("lon","lat","Balanites")
Base_Anogeissus_Z<-Base_Espece_df[,c("xcoord","ycoord","Anogeissus_leiocarpus")]
names(Base_Anogeissus_Z)<-c("lon","lat","Anogeissus")
Base_Adansonia_Z<-Base_Espece_df[,c("xcoord","ycoord","Adansonia_digitata")]
names(Base_Adansonia_Z)<-c("lon","lat","Adansonia")
Base_Acacia_Z<-Base_Espece_df[,c("xcoord","ycoord","Acacia_nilotica")]
names(Base_Acacia_Z)<-c("lon","lat","Acacia")
pa_dataF <- st_as_sf(Base_Faidherbia_Z, coords = c("lon","lat"), crs = crs(ENFA_var))
Cor <- raster::extract(ENFA_var, pa_dataF, df = TRUE)
View(Cor)
Cor<-Cor[,-1]
p.mat <- cor_pmat(Cor)
ggcorrplot(mat,ggtheme = ggplot2::theme_gray,
hc.order = TRUE,
type = "lower",
p.mat = p.mat,
colors = c("#6D9EC1", "white", "#E46726")) +
ggtitle("(b)") + theme(plot.title = element_text(hjust = 0.5, size = 10))
ggcorrplot(mat,ggtheme = ggplot2::theme_gray,
hc.order = TRUE,
type = "lower",
p.mat = p.mat,
colors = c("#6D9EC1", "white", "#E46726")) +
ggtitle("(b)") + theme(plot.title = element_text(hjust = 0.5, size = 10))
ggcorrplot::ggcorrplot(mat,ggtheme = ggplot2::theme_gray,
hc.order = TRUE,
type = "lower",
lab = FALSE,
colors = c("#6D9EC1", "white", "#E46726")) +
ggtitle("(a)") + theme(plot.title = element_text(hjust = 0.5, size = 10))
plot(Type_Sol)
Sol<-Type_Sol
Sol@data@values<-as.factor(Sol@data@values)
plot(Sol)
Variables<-addLayer(Variables,Sol)
nlayers(Variables)
nlayers(Variables)
Variables
Variables
Sol
rm(list = ls()) #Effacement de toutes les données en mémoire
graphics.off() #Effacement de tous les graphiques en mémoire
##########"
Explorer<-function (blocks, rasterLayer, speciesData, num) {
# records<-blocks$records
# records$fold<-1:nrow(records)
# records <- records[,c(5,1,2,3,4)] %>%
#   mutate(calcul= round((test_0 + test_1)*100/(test_0 + test_1+train_1 + train_0),digits = 0))
# records.p <- ggtexttable(records,rows = NULL, theme = ttheme("mGreen"))
#
polyObj <- blocks$blocks
folds <- blocks$folds
kmax <- length(folds)
species <- blocks$species
speciesData <- sf::st_as_sf(speciesData)
samp <- raster::sampleRegular(rasterLayer[[1]], 5e+05, asRaster = TRUE)
map_df <- raster::as.data.frame(samp, xy = TRUE, centroids = TRUE,
na.rm = TRUE)
colnames(map_df) <- c("Easting", "Northing", "MAP")
mid <- stats::median(map_df$MAP)
basePlot <- ggplot2::ggplot() + ggplot2::geom_raster(data = map_df,
ggplot2::aes_string(y = "Northing", x = "Easting", fill = "MAP")) +
ggplot2::scale_fill_gradient2(low = "darkred", mid = "yellow",
high = "darkgreen", midpoint = mid) + ggplot2::guides(fill = FALSE) +
ggplot2::theme_bw() + ggplot2::labs(x = "", y = "")
trainSet <- unlist(folds[[num]][1])
testSet <- unlist(folds[[num]][2])
training <- speciesData[trainSet, ]
testing <- speciesData[testSet, ]
plotPoly <- polyObj[polyObj$folds ==num,]
plotPoly <- sf::st_as_sf(plotPoly)
if (is.null(species)) {
if (class(blocks) == "SpatialBlock") {
ptr <- basePlot + ggplot2::geom_sf(data = plotPoly,
color = "red", fill = "orangered4", alpha = 0.04,
size = 0.2) + ggplot2::geom_sf(data = training,
alpha = 0.7, color = "blue", size = 2) +
ggplot2::ggtitle("Training set") + theme(plot.title = element_text(hjust = 0.5, size = 10))
pts <- basePlot + ggplot2::geom_sf(data = plotPoly,
color = "red", fill = "orangered4", alpha = 0.04,
size = 0.2) + ggplot2::geom_sf(data = testing,
alpha = 0.7, color = "blue", size = 2) +
ggplot2::ggtitle("Testing set") + theme(plot.title = element_text(hjust = 0.5, size = 10))
}
else {
ptr <- basePlot + ggplot2::geom_sf(data = training,
alpha = 0.7, color = "blue", size = 2) +
ggplot2::ggtitle("Training set") + theme(plot.title = element_text(hjust = 0.5, size = 10))
pts <- basePlot + ggplot2::geom_sf(data = testing,
alpha = 0.7, color = "blue", size = 2) +
ggplot2::ggtitle("Testing set") + theme(plot.title = element_text(hjust = 0.5, size = 10))
}
}
else {
if (class(blocks) == "SpatialBlock") {
ptr <- basePlot + ggplot2::geom_sf(data = plotPoly,
color = "red", fill = "orangered4", alpha = 0.04,
size = 0.2) + ggplot2::geom_sf(data = training,
ggplot2::aes(color = get(species)), show.legend = "point",
alpha = 0.7, size = 2) + ggplot2::labs(color = species) +
ggplot2::ggtitle("Training set") + theme(plot.title = element_text(hjust = 0.5, size = 10))
pts <- basePlot + ggplot2::geom_sf(data = plotPoly,
color = "red", fill = "orangered4", alpha = 0.04,
size = 0.2) + ggplot2::geom_sf(data = testing,
ggplot2::aes(color = get(species)), show.legend = "point",
alpha = 0.7, size = 2) + ggplot2::labs(color = species) +
ggplot2::ggtitle("Testing set") + theme(plot.title = element_text(hjust = 0.5, size = 10))
}
else {
ptr <- basePlot + ggplot2::geom_sf(data = training,
ggplot2::aes(color = get(species)), show.legend = "point",
alpha = 0.7, size = 2) + ggplot2::labs(color = species) +
ggplot2::ggtitle("Training set") + theme(plot.title = element_text(hjust = 0.5, size = 10))
pts <- basePlot + ggplot2::geom_sf(data = testing,
ggplot2::aes(color = get(species)), show.legend = "point",
alpha = 0.7, size = 2) + ggplot2::labs(color = species) +
ggplot2::ggtitle("Testing set") + theme(plot.title = element_text(hjust = 0.5, size = 10))
}
}
#ptr_pts<-ggpubr::ggarrange(ptr, pts,common.legend = TRUE)
#plot(cowplot::plot_grid(ptr, pts))
#plot(ggpubr::ggarrange(ptr,records.p, pts))
plot(ggpubr::ggarrange(ptr, pts,common.legend = TRUE))
}
################end function
summarise_fold<-function(sb){
records<-sb$records
records$fold<-1:nrow(records)
records <- records[,c(5,1,2,3,4)] %>%
mutate(Pourcentage= round((test_0 + test_1)*100/(test_0 + test_1+train_1 + train_0),digits = 0))
plot(ggpubr::ggtexttable(records,rows = NULL, theme = ttheme("mGreen")))
}
ggR_Predict<-function(RasterLayer){
ggR(RasterLayer,geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "Probabilité", colours = rev(terrain.colors(10)))  +
theme_bw() + xlab("Longitude") + ylab("Latitude") +
ggtitle(label = names(RasterLayer)) + theme(plot.title = element_text(hjust = 0.5, size = 10))
}
#######"import species
filename<-paste0("C:\\Users\\Hp\\OneDrive\\cirad\\Data\\BD_Arbre","\\arbres_diohine_mai2018_par_Zone_OK_BON.shp")
Species<-st_read(filename,quiet = T)
Base_Espece<-Species
#Faidherbia_albida
Base_Espece$Faidherbia_albida<-as.factor(if_else(Base_Espece$Species =="Faidherbia albida","1","0"))
#Balanites aegyptiaca
Base_Espece$Balanites_aegyptiaca<-as.factor(if_else(Base_Espece$Species =="Balanites aegyptiaca","1","0"))
#Anogeissus leiocarpus
Base_Espece$Anogeissus_leiocarpus<-as.factor(if_else(Base_Espece$Species =="Anogeissus leiocarpus","1","0"))
#Adansonia digitata
Base_Espece$Adansonia_digitata<-as.factor(if_else(Base_Espece$Species =="Adansonia digitata","1","0"))
#Acacia nilotica
Base_Espece$Acacia_nilotica<-as.factor(if_else(Base_Espece$Species =="Acacia nilotica","1","0"))
######################## définir une fonction
Base_Espece_df<-st_drop_geometry(Base_Espece)
Base_Faidherbia_Z<-Base_Espece_df[,c("xcoord","ycoord","Faidherbia_albida")]
names(Base_Faidherbia_Z)<-c("lon","lat","Faidherbia")
Base_Balanites_Z<-Base_Espece_df[,c("xcoord","ycoord","Balanites_aegyptiaca")]
names(Base_Balanites_Z)<-c("lon","lat","Balanites")
Base_Anogeissus_Z<-Base_Espece_df[,c("xcoord","ycoord","Anogeissus_leiocarpus")]
names(Base_Anogeissus_Z)<-c("lon","lat","Anogeissus")
Base_Adansonia_Z<-Base_Espece_df[,c("xcoord","ycoord","Adansonia_digitata")]
names(Base_Adansonia_Z)<-c("lon","lat","Adansonia")
Base_Acacia_Z<-Base_Espece_df[,c("xcoord","ycoord","Acacia_nilotica")]
names(Base_Acacia_Z)<-c("lon","lat","Acacia")
lsoil<-list.files("D:\\Stage_SDM\\SDM\\Data\\SoilGrids_250m\\",patt="\\.tif")
lsoil<-sprintf("D:\\Stage_SDM\\SDM\\Data\\SoilGrids_250m\\%s",lsoil)
e <- extent(-16.57, -16.33, 14.43 , 14.65)
lsoil
AETI<-raster(lsoil[1])
AETI.crop<-crop(AETI,e)
names(AETI.crop)<-"AETI"
CLYPPT<-raster(lsoil[2])
CLYPPT.crop<-crop(CLYPPT,e)
names(CLYPPT.crop)<-"CLYPPT"
ORCDRC<-raster(lsoil[3])
ORCDRC.crop<-crop(ORCDRC,e)
names(ORCDRC.crop)<-"ORCDRC"
PHIHOX<-raster(lsoil[4])
PHIHOX.crop<-crop(PHIHOX,e)
names(PHIHOX.crop)<-"PHIHOX"
SLTPPT<-raster(lsoil[5])
SLTPPT.crop<-crop(SLTPPT,e)
names(SLTPPT.crop)<-"SLTPPT"
SNDPPT<-raster(lsoil[6])
SNDPPT.crop<-crop(SNDPPT,e)
names(SNDPPT.crop)<-"SNDPPT"
NTO<-raster(lsoil[7])
NTO.crop<-crop(NTO,e)
names(NTO.crop)<-"NTO"
P<-raster(lsoil[8])
P.crop<-crop(P,e)
names(P.crop)<-"P"
NBWP<-raster(lsoil[9])
NBWP.crop<-crop(NBWP,e)
names(NBWP.crop)<-"NBWP"
SINT<-raster(lsoil[10])
SINT.crop<-crop(SINT,e)
names(SINT.crop)<-"SINT"
SOS<-raster(lsoil[11])
SOS.crop<-crop(SOS,e)
names(SOS.crop)<-"SOS"
##########################"
# import raster data worlclim
l1<-list.files("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\",patt="\\.tif")
l1<-sprintf("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\%s",l1)
worldclim<-stack(l1)
e <- extent(-16.57, -16.33, 14.43 , 14.65)
worldclim.crop <- crop(worldclim,e)
worldclim.crop<-projectRaster(worldclim.crop,P.crop)
worldclim.crop<-stack(worldclim.crop)
AETI<-projectRaster(AETI.crop,P.crop)
CLYPPT<-projectRaster(CLYPPT.crop,P.crop)
#Êextent(CLYPPT)<-extent(P.crop)
ORCDRC<-projectRaster(ORCDRC.crop,P.crop)
#extent(ORCDRC)<-extent(P.crop)
PHIHOX<-projectRaster(PHIHOX.crop,P.crop)
fun <- function(x) { x / 10 }
PHIHOX<-calc(PHIHOX,fun)
names(PHIHOX)<-"PHIHOX"
SLTPPT<-projectRaster(SLTPPT.crop,P.crop)
NTO<-projectRaster(NTO.crop,P.crop)
SNDPPT<-projectRaster(SNDPPT.crop,P.crop)
NBWP<-projectRaster(NBWP.crop,P.crop)
SINT<-projectRaster(SINT.crop,P.crop)
SOS<-projectRaster(SOS.crop,P.crop)
P<-P.crop
SoilGrid.crop<-stack(AETI,SINT,SOS,NBWP,CLYPPT,ORCDRC,PHIHOX,SLTPPT,NTO,SNDPPT,P)
#plot(Predictors,1)
#################variables topographiques
r <- raster(ncol=105, nrow=115)
# xmin       : -16.56922
# xmax       : -16.32964
# ymin       : 14.43083
# ymax       : 14.64958
ex <- extent(-16.56922, -16.32964, 14.43083  , 14.64958)
extent(r) <- ex
topofilename<-paste0("C:\\Users\\Hp\\OneDrive\\Memoire_ITS4\\shpzones\\variables topographiques","\\topo.shp")
topo <- shapefile(topofilename,verbose=TRUE)
plot(topo)
names(topo)
Slo1 <- rasterize(topo, r, field="Slo1", update=TRUE, updateValue="NA")
plot(Slo1)
names(Slo1)<-"Slo1"
plot(Slo1)
###########
Len1 <- rasterize(topo, r, field="Len1", update=TRUE, updateValue="NA")
plot(Len1)
######
Sll <- rasterize(topo, r, field="Sll", update=TRUE, updateValue="NA")
plot(Sll) # valeur identique
#####
Csl <- rasterize(topo, r, field="Csl", update=TRUE, updateValue="NA")
plot(Csl)
Wid1 <- rasterize(topo, r, field="Wid1", update=TRUE, updateValue="NA")
plot(Wid1)
names(Wid1)<-"Wid1"
names(Csl)<-"Csl"
names(Sll)<-"Sll"
#####
Csl <- rasterize(topo, r, field="Csl", update=TRUE, updateValue="NA")
plot(Csl)
names(Csl)<-"Csl"
Wid1 <- rasterize(topo, r, field="Wid1", update=TRUE, updateValue="NA")
plot(Wid1)
names(Wid1)<-"Wid1"
#############
Dep1 <- rasterize(topo, r, field="Dep1", update=TRUE, updateValue="NA")
plot(Dep1)
names(Dep1)<-"Dep1"
###########
Elev <- rasterize(topo, r, field="Elev", update=TRUE, updateValue="NA")
plot(Elev)
names(Elev)<-"Elev"
###########
Vartopo<-stack(Slo1,Len1,Sll,Csl,Wid1,Dep1,Elev)
###############"
filename_zone<-paste0("C:\\Users\\Hp\\OneDrive\\Memoire_ITS4\\shpzones","\\Diohine_Echantillons_Class.shp")
zone_etude<-shapefile(filename_zone)
map<-st_as_sf(zone_etude)
map$Type_Sol<-as.factor(map$Type_Sol)
ggplot(map)  + geom_sf(aes(fill=Type_Sol),colour="black") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
scale_fill_manual(values=c("blue","green","red")) +  ggtitle(label = "Zone d'étude") +
theme(plot.title = element_text(hjust = 0.5, size = 10)) +
theme(legend.title = element_blank())
######
zone_etude@data$Sol<-as.factor(if_else(zone_etude@data$Type_Sol =="Ferrugineux tropicaux","1",if_else(zone_etude@data$Type_Sol =="Hydromorphe","2","3")))
Type_Sol <- rasterize(zone_etude, r, field="Sol", update=TRUE, updateValue="NA")
names(Type_Sol)<-"Sol"
plot(Type_Sol) # pas numéric
Vartopo<-projectRaster(Vartopo,SoilGrid.crop)
Type_Sol<-projectRaster(Type_Sol,SoilGrid.crop)
Variables<-stack(SoilGrid.crop,worldclim.crop,Type_Sol,Vartopo)
#writeRaster(Variables, filename=file.path(tmp, "Variables.tif"), format="GTiff", overwrite=TRUE)
names(Variables)
# [1] "AETI"   "SINT"   "SOS"    "NBWP"   "CLYPPT" "ORCDRC"
# [7] "PHIHOX" "SLTPPT" "NTO"    "SNDPPT" "P"      "bio1"
# [13] "bio10"  "bio11"  "bio12"  "bio13"  "bio14"(17)  "bio15"
# [19] "bio16"  "bio17"  "bio18"  "bio19"(22)  "bio2"   "bio3"
# [25] "bio4"   "bio5"   "bio6"   "bio7"   "bio8"   "bio9"
# [31] "Sol"(31)    "Slo1"   "Len1"   "Sll"(34)    "Csl"    "Wid1"
# [37] "Dep1"   "Elev"
nlayers(Variables)
##########supprimer les variables bio14,bio19,Sll,Sol(on ne la mets pas dans ENFA car catégorielle)
ENFA_var <- dropLayer(Variables, c(17, 22, 31))
Sol<-Type_Sol
Sol@data@values<-as.factor(Sol@data@values)
plot(Sol)
Sol
