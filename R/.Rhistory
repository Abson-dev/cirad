annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
library(ggplot2)
###########répresentation graphique des présence/absence de Faidherbia albida dans les zones
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
library(ggspatial)
###########répresentation graphique des présence/absence de Faidherbia albida dans les zones
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
#Extraire un seul RasterLayer d'un RasterBrick (ou RasterStack).
#r <- raster(b, layer=2)
###)connaitre l'étendue de notre zone d'étude (ext)
ext<-raster::extent(Species)
ext
# class      : Extent
# xmin       : -16.53864
# xmax       : -16.35454
# ymin       : 14.45461
# ymax       : 14.63543
worlClim<-stack(l1)
r <- raster(worldClim.crop, layer=1)
plot(r)
# class      : Extent
# xmin       : -16.53864
# xmax       : -16.35454
# ymin       : 14.45461
# ymax       : 14.63543
worlClim<-stack(l1)
###)utiliser crop pour mettre a la même zone d'étude les données de worlclim
worldClim.crop<-crop(worlClim,ext)
r <- raster(worldClim.crop, layer=1)
plot(r)
plot(r)
plot(worldClim.crop)
r <- raster(worldClim.crop, layer=1)
levelplot(r)
levelplot(worldClim.crop)
levelplot(r)
levelplot(r,contour=F)
p <- levelplot(worldClim.crop, layers=1, margin = list(FUN = median))
p + layer(sp.lines(zone_etude1, lwd=0.8, col='darkgray'))
worldClim.crop
proj <- CRS('+proj=longlat +datum=WGS84')
##Modify next line to your folder
mapaSHP <- readShapeLines('C:\\Users\\Hp\\OneDrive\\Memoire_ITS4\\shpzones\\Zone_1_BON.shp', proj4string=proj)
p <- levelplot(worldClim.crop, layers=1, margin = list(FUN = median))
p + layer(sp.lines(zone_etude1, lwd=0.8, col='darkgray'))
p
mapaSHP@bbox <- as.matrix(extent(worldClim.crop))
p <- levelplot(worldClim.crop, layers=1, margin = list(FUN = median))
p + layer(sp.lines(zone_etude1, lwd=0.8, col='darkgray'))
p + layer(sp.lines(mapaSHP, lwd=0.8, col='darkgray'))
r <- raster(worldClim.crop, layer=1)
###########répresentation graphique des présence/absence de Faidherbia albida dans les zones
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
###########répresentation graphique des présence/absence de Faidherbia albida dans les zones
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA)  +
levelplot(r,contour=F) +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
###########répresentation graphique des présence/absence de Faidherbia albida dans les zones
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA)  +
geom_raster(data=r)+
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
p <- levelplot(worldClim.crop, layers=1, margin = list(FUN = median))
bounds <- list("sp.polygons", p)
spplot(r, sp.layout=bounds)
bounds <- list("sp.polygons", mapaSHP)
spplot(r, sp.layout=bounds)
##Modify next line to your folder
mapaSHP <- readShapeLines('C:\\Users\\Hp\\OneDrive\\Memoire_ITS4\\shpzones\\Zone_1_BON.shp', proj4string=proj)
bounds <- list("sp.polygons", mapaSHP)
spplot(r, sp.layout=bounds)
mapaSHP@bbox <- as.matrix(extent(worldClim.crop))
bounds <- list("sp.polygons", mapaSHP)
spplot(r, sp.layout=bounds)
values(r) <- 1:ncell(r)
r <- mask(r, mapaSHP)
bounds <- list("sp.polygons", mapaSHP)
spplot(r, sp.layout=bounds)
plot(r)
p <- levelplot(worldClim.crop, layers=1, margin = list(FUN = median))
p + layer(sp.lines(mapaSHP, lwd=0.8, col='darkgray'))
p
plotPAZ1
###########répresentation graphique des présence/absence de Faidherbia albida dans les zones
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
bounds <- list("sp.polygons", map1)
spplot(r, sp.layout=bounds)
r <- mask(r, map1)
spplot(r, sp.layout=bounds)
bounds <- list("sp.polygons", zone_etude1)
spplot(r, sp.layout=bounds)
r <- mask(r, zone_etude1)
bounds <- list("sp.polygons", zone_etude1)
spplot(r, sp.layout=bounds)
r <- raster(worldClim.crop, layer=1)
plot(r)
ncell(r)
values(r) <- 1:ncell(r)
r <- mask(r, zone_etude1)
plot(r)
levelplot(r,contour=F)
#############"
zone_etude1<-shapefile("C:\\Users\\Hp\\OneDrive\\Memoire_ITS4\\shpzones\\Zone_1_BON.shp")
zone_etude1
z1<-st_as_sf(zone_etude1)
z1
r <- raster(worldClim.crop, layer=1)
bounds <- list("sp.polygons", z1)
spplot(r, sp.layout=bounds)
bounds
values(r) <- 1:ncell(r)
r <- mask(r, z1)
spplot(r, sp.layout=bounds)
plot(r)
plot(z1)
plot(z1$geometry)
zone1<-z1$geometry
plot(zone1)
r <- raster(worldClim.crop, layer=1)
masked <- mask(x = r, mask = zone1)
values(r) <- 1:ncell(r)
masked <- mask(x = r, mask = zone1)
r <- mask(r, zone1)
r <- mask(r, zone1)
values(r) <- 1:ncell(r)
r <- mask(r, zone1)
r <- mask(r, z1)
plot(r)
masked <- mask(x = r, mask = z1)
plot(masked)
spplot(r, sp.layout=bounds)
levelplot(r,contour=F)
r <- raster(worldClim.crop, layer=1)
plot(r)
levelplot(r,contour=F)
p <- levelplot(worldClim.crop, layers=1, margin = list(FUN = median))
p + layer(sp.lines(z1, lwd=0.8, col='darkgray'))
p + layer(sp.lines(zone1, lwd=0.8, col='darkgray'))
p + layer(sp.lines(mapaSHP, lwd=0.8, col='darkgray'))
##Modify next line to your folder
mapaSHP <- readShapeLines('C:\\Users\\Hp\\OneDrive\\Memoire_ITS4\\shpzones\\Zone_1_BON.shp', proj4string=proj)
mapaSHP
mapaSHP@bbox <- as.matrix(extent(worldClim.crop))
p <- levelplot(worldClim.crop, layers=1, margin = list(FUN = median))
p + layer(sp.lines(mapaSHP, lwd=0.8, col='darkgray'))
p <- levelplot(worldClim.crop, layers=1)
p + layer(sp.lines(mapaSHP, lwd=0.8, col='darkgray'))
p + layer(sp.lines(mapaSHP, col='darkgray'))
## Example RasterLayer
r <- r <- raster(worldClim.crop, layer=1,crs=proj4string(zone_etude))
## Example RasterLayer
r <- raster(worldClim.crop, layer=1,crs=proj4string(zone_etude))
## Example RasterLayer
r <- raster(worldClim.crop, layer=1,crs=proj4string(zone_etude_1))
## Example RasterLayer
r <- raster(worldClim.crop, layer=1)
r[] <- 1:length(r)
r <- mask(r, z1)
## Check that it worked
plot(r)
plot(z1, add=TRUE, lwd=2)
## Check that it worked
plot(r)
plot(z1, add=TRUE, lwd=2)
plot(z1, add=TRUE, lwd=1)
r
## Example RasterLayer
r <- raster(worldClim.crop, layer=1,res=0.01)
spplot(r)
spplot(r,z1)
bounds <- list("sp.polygons", z1)
spplot(r,sp.layout=bounds)
ggR(r)
ggR(r,geom_raster=TRUE)
ggR(r,geom_raster=TRUE,stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
## Check that it worked
plot(r)
plot(z1, add=TRUE, lwd=1)
## Check that it worked
plot(r)
plot(z1, add=TRUE, lwd=1)
plotPAZ1
bio1 <- raster(worldClim.crop, layer=1)
plot(bio1)
levelplot(bio1,contour=F)
names(worldClim.crop)
bounds <- list("sp.polygons", z1)
spplot(bio1, sp.layout=bounds)
# bounds <- list("sp.polygons", z1)
# spplot(bio1, sp.layout=bounds)
bio10 <- raster(worldClim.crop, layer=2)
levelplot(bio10,contour=F)
bio1
ggR(bio1,geom_raster=TRUE,stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(bio1,geom_raster=TRUE,stretch = "hist",hue=0.5,ggLayer = F)
ggR(bio1)
ggR(bio1,geom_raster=TRUE)
ggR(bio1,geom_raster=TRUE,stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = value, name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(bio1,geom_raster=TRUE,stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = bio1$value, name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggplot(map1)   +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1,geom_raster=TRUE,stretch = "hist",hue=0.5,ggLayer = T)
ggR(bio1,geom_raster=TRUE,stretch = "hist",hue=0.5,ggLayer = F)
ggplot(map1)   +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1,geom_raster=TRUE,stretch = "hist",hue=0.5,ggLayer = T)
z1
r <- mask(r, z1)
zoom(r, ext=drawExtent())
zoom(r, ext=drawExtent())
ggplot(map1)   +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1,geom_raster=TRUE,stretch = "hist",hue=0.5,ggLayer = T)
ggR(bio1, geom_raster = TRUE) +
scale_fill_gradientn(name = "mojo", colours = rainbow(10)) +
ggtitle("**Funkadelic**")
ggR(bio1, geom_raster = TRUE) +
scale_fill_gradientn(name = "bio1", colours = rainbow(10)) +
ggtitle("**Funkadelic**")
ggplot(map1)   +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = T) +
scale_fill_gradientn(name = "bio1", colours = rainbow(10)) +
ggtitle("**Funkadelic**")
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = rainbow(10)) +
ggtitle("**Funkadelic**")
ggR(r, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = rainbow(10)) +
ggtitle("**Funkadelic**")
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = rainbow(10)) +
ggtitle("**Funkadelic**")
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100)) +
ggtitle("**Funkadelic**")
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100)) +
ggtitle("**Funkadelic**")  +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100)) +
ggtitle("**Funkadelic**")  +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank()) +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100)) +
ggtitle("**Funkadelic**")  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100)) +
ggtitle("**Funkadelic**")  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
ggplot(map1)   +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100)) +
ggtitle("**Funkadelic**")  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "Température moyenne annuelle", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio10, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "Température moyenne annuelle", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "Température moyenne annuelle", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering) +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))
theme_bw()
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(r, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z1, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = zone_etude, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z2, colour = "black", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z2, colour = "red", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z2, colour = "blue", fill = NA)
ggR(r, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z2, colour = "blue", fill = NA)
ggR(r, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z1, colour = "blue", fill = NA)
r <- raster(worldClim.crop, layer=1)
r <- mask(r, z1)
plot(r)
plot(z1, add=TRUE, lwd=1)
ggR(r, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z1, colour = "blue", fill = NA)
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z1, colour = "blue", fill = NA)
ggplot(map1)   +
ggR(bio1, geom_raster = TRUE,ggLayer = F) +
scale_fill_gradientn(name = "bio1", colours = terrain.colors(100))  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)  +
geom_sf(data = z1, colour = "blue", fill = NA)
DataModelFZ1<-dataFZ1@data
View(DataModelFZ1)
table(DataModelFZ1$Faidherbia)
table(DataModelFZ1$bio1)
summarise(DataModelFZ1)
summarize(DataModelFZ1)
summarize(DataModelFZ1$bio1)
DataModelFZ1
##################Modélisation
#Examinons d'abord un modèle d'arbres de classification et de régression (CART).
library(rpart)
cart <- rpart(Faidherbia~., data=DataModelFZ1)
printcp(cart)
plotcp(cart)
plotcp(cart)
plot(cart, uniform=TRUE, main="Regression Tree")
# text(cart, use.n=TRUE, all=TRUE, cex=.8)
text(cart, cex=.8, digits=1)
library(randomForest)
fpa <- as.factor(DataModelFZ1[, 'Faidherbia'])
crf <- randomForest(DataModelFZ1[, 2:ncol(dw)], fpa)
crf <- randomForest(DataModelFZ1[, 2:ncol(DataModelFZ1)], fpa)
crf
plot(crf)
plot(crf)
varImpPlot(crf)
