map_A_1<-st_as_sf(PA_AZ1)
map_A_1$Anogeissus<-if_else(map_A_1$Anogeissus ==1,"présence","absence")
map_A_1$Anogeissus<-as.factor(map_A_1$Anogeissus)
##zone 2
filename_PA_A_Z2<-paste0("C:\\Users\\Hp\\OneDrive\\redactions","\\dataAZ2.shp")
PA_AZ2<-shapefile(filename_PA_A_Z2)
map_A_2<-st_as_sf(PA_AZ2)
map_A_2$Anogeissus<-if_else(map_A_2$Anogeissus ==1,"présence","absence")
map_A_2$Anogeissus<-as.factor(map_A_2$Anogeissus)
##zone 3
filename_PA_A_Z3<-paste0("C:\\Users\\Hp\\OneDrive\\redactions","\\dataAZ3.shp")
PA_AZ3<-shapefile(filename_PA_A_Z3)
map_A_3<-st_as_sf(PA_AZ3)
map_A_3$Anogeissus<-if_else(map_A_3$Anogeissus ==1,"présence","absence")
map_A_3$Anogeissus<-as.factor(map_A_3$Anogeissus)
##zone 4
filename_PA_A_Z4<-paste0("C:\\Users\\Hp\\OneDrive\\redactions","\\dataAZ4.shp")
PA_AZ4<-shapefile(filename_PA_A_Z4)
map_A_4<-st_as_sf(PA_AZ4)
map_A_4$Anogeissus<-if_else(map_A_4$Anogeissus ==1,"présence","absence")
map_A_4$Anogeissus<-as.factor(map_A_4$Anogeissus)
##########.shp des zones déjà importer
###########répresentation graphique des présence/absence de Anogeissus  dans les zones
##zone 1
plotPA_A_Z1<-ggplot(map_A_1)   +
geom_sf(aes(color = Anogeissus)) +
geom_sf(data = z1, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Anogeissus Model\\PA_AnogeissusZ1.png",plotPA_A_Z1)
##zone 2
plotPA_A_Z2<-ggplot(map_A_2)   +
geom_sf(aes(color = Anogeissus)) +
geom_sf(data = z2, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Anogeissus Model\\PA_AnogeissusZ2.png",plotPA_A_Z2)
##zone 3
plotPA_A_Z3<-ggplot(map_A_3)   +
geom_sf(aes(color = Anogeissus)) +
geom_sf(data = z3, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Anogeissus Model\\PA_AnogeissusZ3.png",plotPA_A_Z3)
##zone 4
plotPA_A_Z4<-ggplot(map_A_4)   +
geom_sf(aes(color = Anogeissus)) +
geom_sf(data = z4, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Anogeissus Model\\PA_AnogeissusZ4.png",plotPA_A_Z4)
install.packages("gstat")
#♥pas de doublon
################ Autocorrélation spatiale
library(gstat)
#############################################################
#Enregistrements en double pour l'espèce
dups <- duplicated(Base_Balanites_Z1[, 1:3])
class(dups)
table(dups)
dataFZ1
#♥pas de doublon
################ Autocorrélation spatiale
#############1 avec le corrélogramme de SDMSelect
data.prepared1<-Prepare_dataset(x=dataFZ1,var=1,cov = 2:ncol(dataFZ1),datatype = "PA",na.rm = TRUE)
######zone 2
data.prepared2<-Prepare_dataset(x=dataFZ2,var=1,cov = 2:ncol(dataFZ2),datatype = "PA",na.rm = TRUE)
#♥pas de doublon
################ Autocorrélation spatiale
########"
library(spdep)
zone_etude1
###zone 1
Base_FZ1<-Base_Faidherbia_Z1
View(Base_FZ1)
Base_FZ1$Faidherbia<-as.factor(Base_FZ1$Faidherbia)
###conversion en facteur
Faidherbia <- as.factor(Base_FZ1$Faidherbia,levels=c("présence","absence")
)
###conversion en facteur
Faidherbia <- as.factor(Base_FZ1$Faidherbia,levels=c("présence","absence"))
###conversion en facteur
Faidherbia <- as.factor(Base_FZ1$Faidherbia,levels=c("presence","absence"))
worldClim.crop
## Not run:
r <- raster(system.file("external/test.grd", package="raster"))
s <- stack(r, r*2)
names(s) <- c('meuse', 'meuse x 2')
library(ggplot2)
theme_set(theme_bw())
gplot(s) + geom_tile(aes(fill = value)) +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
install.packages("rasterVis")
library(rasterVis)
gplot(s) + geom_tile(aes(fill = value)) +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
s
gplot(worldClim.crop) + geom_tile(aes(fill = value)) +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
gplot(worldClim.crop) + geom_tile(aes(fill = bio1)) +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
gplot(worldClim.crop$bio1) + geom_tile(aes(fill = bio1)) +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
install.packages("RStoolbox")
library(RStoolbox)
ggRGB(worldClim.crop)
ggRGB(worldClim.crop)
ggRGB(worldClim.crop,r=1)
library(ggplot2)
ggRGB(worldClim.crop,r=1,g=2,b=3)
gplot(worlClim$bio1) + geom_tile(aes(fill = bio1)) +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
gplot(worlClim) + geom_tile(aes(fill = bio1)) +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
worlClim
gplot(worlClim) + geom_tile(aes(fill = "bio1")) +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
gplot(worlClim) + geom_tile() +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
gplot(worlClim) + geom_tile() +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
gplot(worlClim$bio1) + geom_tile() +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
ggRGB(worldClim.crop$bio1,r=1,g=2,b=3)
ggRGB(worldClim.crop,r=1,g=2,b=3)
library(RStoolbox)
library(rasterVis)
ggRGB(worldClim,r=1,g=2,b=3)
ggRGB(worlClim,r=1,g=2,b=3)
ggRGB(worlClim,r=2,g=2,b=3)
ggRGB(worldClim.crop,r=2,g=2,b=3)
plot(worldClim.crop$bio1)
###2) utiliser la fonction stack pour rendre RasterStack
worlClim<-stack(l1)
###3)connaitre l'étendue de notre zone d'étude (ext)
ext<-extent(Species)
###4)utiliser crop pour mettre a la même zone d'étude les données de worlclim
worldClim.crop<-crop(worlClim,ext)
plot(worldClim.crop$bio1)
ggRGB(worldClim.crop,r=2,g=2,b=3)
ggRGB(worldClim.crop$bio1,r=2,g=2,b=3)
ggRGB(worldClim.crop,g=2)
ggRGB(worldClim.crop,g=1)
ggRGB(worldClim.crop,g=1,geom_raster=T)
df <- ggRGB(worldClim.crop, ggObj = FALSE)
head(df)
ggRGB(worldClim.crop,g=1,geom_raster=T,clipValues="bio1")
ggRGB(worldClim.crop,g=1,geom_raster=F,clipValues="bio1")
df <- ggRGB(worldClim.crop, ggObj = T)
head(df)
ggRGB(worldClim.crop$bio1,g=1,geom_raster=F,clipValues="bio1")
ggRGB(worldClim.crop,g=1,geom_raster=F,clipValues="bio1",stretch ="lin")
ggRGB(worldClim.crop,g=1,geom_raster=F,clipValues="bio1",stretch ="hist")
ggRGB(worldClim.crop,g=1,geom_raster=T,clipValues="bio1",stretch ="hist")
ggRGB(worldClim.crop,g=2,geom_raster=T,clipValues="bio1",stretch ="hist")
ggRGB(worldClim.crop,g=3,geom_raster=T,clipValues="bio1",stretch ="hist")
plot(worldClim.crop$bio1)
ggRGB(worldClim.crop,g=3,geom_raster=T,clipValues="bio1",stretch ="hist")
ggRGB(worldClim.crop,g=3,ggLayer=T,geom_raster=T,clipValues="bio1",stretch ="hist")
ggRGB(worldClim.crop,g=3,ggLayer=F,nullValue=1,geom_raster=T,clipValues="bio1",stretch ="hist")
ggRGB(worldClim.crop,g=3,ggLayer=F,nullValue=1,geom_raster=T,clipValues="bio1",stretch ="sqrt")
ggRGB(worldClim.crop,g=3,ggLayer=F,nullValue=1,clipValues="bio1",stretch ="sqrt")
ggRGB(worldClim.crop,g=3,ggLayer=F,nullValue=1,clipValues="bio1",stretch ="log")
ggRGB(worldClim.crop,g=3,ggLayer=F,nullValue=1,clipValues="bio2",stretch ="log")
ggRGB(worldClim.crop,g=3,ggLayer=F,nullValue=1,stretch ="log")
ggRGB(worldClim.crop,g=3,ggLayer=F,nullValue=10,stretch ="log")
ggRGB(worldClim.crop,g=3,stretch ="log")
ggRGB(worldClim.crop,g=3,stretch ="log",limits="bio1")
ggR(worldClim.crop, 1:2, geom_raster=TRUE, stretch = "lin") +
scale_fill_gradientn(colors=grey.colors(100), guide = FALSE) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
plot(worldClim.crop$bio1)
ggR(worldClim.crop, 1:2, geom_raster=TRUE, stretch = "lin") +
scale_fill_gradientn(colors=green.colors(100), guide = FALSE) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1:2, geom_raster=TRUE, stretch = "lin") +
scale_fill_gradientn(colors=green, guide = FALSE) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1:2, geom_raster=TRUE, stretch = "lin") +
scale_fill_gradientn(colors="green", guide = FALSE) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1:2, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colors="green", guide = FALSE) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1:2, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
plot(worldClim.crop$bio1)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "lin") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "sqrt") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "log") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "log") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation",forceCat=T) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "log",forceCat=T) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "log") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "lin") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(10), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(1), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(2), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(3), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(4), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
plot(worldClim.crop$bio1)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(4), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(5), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(6), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(7), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(-7), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(8), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(9), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation",values="bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation",limits=c(0,4)) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation",limits=c(0,1)) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
geom_tile(aes(x = x, y = y, fill = bio1)) +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
worldClim.crop
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 2, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 3, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 4, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 5, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 6, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 7, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(11), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 7, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 8, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 9, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 11, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 12, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 13, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 15, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 19, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 20, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 6, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
plot(worldClim.crop$bio6)
ggR(worldClim.crop, 6, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(0), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 6, geom_raster=TRUE, stretch = "hist") +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
plot(worldClim.crop$bio6)
gplot(worlClim$bio1) + geom_tile() +
facet_wrap(~ variable) +
scale_fill_gradient(low = 'white', high = 'blue') +
coord_equal()
gplot(worlClim$bio1) + geom_tile() +
facet_wrap(~ variable) +
scale_fill_gradientn(colours = terrain.colors(100)) +
coord_equal()
gplot(worlClim) + geom_tile() +
facet_wrap(~ variable) +
scale_fill_gradientn(colours = terrain.colors(100)) +
coord_equal()
ggR(worldClim.crop, 6, geom_raster=TRUE, stretch = "hist",hue=0) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.25) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
