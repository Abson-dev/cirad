####zone 1
Base_Acacia_Z1<-Base_Espece_Zone1 %>%
select(xcoord,ycoord,Acacia_nilotica)
View(Base_Acacia_Z)
data_df
View(data_df)
#zone d'étude
Base_Acacia_Z<-data_df %>%
select(xcoord,ycoord,Acacia_nilotica)
#zone d'étude
Base_Adansonia_Z<-data_df %>%
select(xcoord,ycoord,Adansonia_digitata)
library(dplyr)
class(data_df)
##########???les espèces dans les différentes zones
Base_Espece_Zone1<-data_df %>%
filter(Zone == 1)
Base_Espece_Zone2<-data_df %>%
filter(Zone == 2)
Base_Espece_Zone3<-data_df %>%
filter(Zone == 3)
Base_Espece_Zone4<-data_df %>%
filter(Zone == 4)
###################Faidherbia albida dans les zones
#zone d'étude
Base_Faidherbia_Z<-data_df %>%
select(xcoord,ycoord,Faidherbia_albida)
#####supprimer la géométrie afin de pouvoir faire quelques manipulations
data_df<-st_drop_geometry(Base_Espece)
class(data_df)
View(data_df)
#zone d'étude
Base_Adansonia_Z<-data_df %>%
select(xcoord,ycoord,Adansonia_digitata)
View(data_df)
####zone 1
Base_Adansonia_Z1<-Base_Espece_Zone1 %>%
select(xcoord,ycoord,Adansonia_digitata)
names(Base_Adansonia_Z1)<-c("lon","lat","Adansonia")
####zone 1
Base_Acacia_Z1<-Base_Espece_Zone1 %>%
select(xcoord,ycoord,Acacia_nilotica)
names(Base_Acacia_Z1)<-c("lon","lat","Acacia")
AcZ1<-Base_Acacia_Z1
####zone 2
Base_Acacia_Z2<-Base_Espece_Zone2 %>%
select(xcoord,ycoord,Acacia_nilotica)
names(Base_Acacia_Z2)<-c("lon","lat","Acacia")
AcZ2<-Base_Acacia_Z2
####zone 3
Base_Acacia_Z3<-Base_Espece_Zone3 %>%
select(xcoord,ycoord,Acacia_nilotica)
names(Base_Acacia_Z3)<-c("lon","lat","Acacia")
AcZ3<-Base_Acacia_Z3
####♦zone 4
Base_Acacia_Z4<-Base_Espece_Zone4 %>%
select(xcoord,ycoord,Acacia_nilotica)
names(Base_Acacia_Z4)<-c("lon","lat","Acacia")
AcZ4<-Base_Acacia_Z4
##################fin zones
#Transform data as SpatialPointDataFrame
###zone 1
sp::coordinates(AcZ1) <-~lon+lat
sp::proj4string(AcZ1) <-"+proj=longlat +datum=WGS84"
###zone 2
sp::coordinates(AcZ2) <-~lon+lat
sp::proj4string(AcZ2) <-"+proj=longlat +datum=WGS84"
###zone 3
sp::coordinates(AcZ3) <-~lon+lat
sp::proj4string(AcZ3) <-"+proj=longlat +datum=WGS84"
###zone 4
sp::coordinates(AcZ4) <-~lon+lat
sp::proj4string(AcZ4) <-"+proj=longlat +datum=WGS84"
##############"fin zones
#extract covariables, combine with dataset
###zone 1
dataAcZ1<-CovarExtract(x=AcZ1,cov.paths = l1) # en utilsisant SDMSelect
###zone 2
dataAcZ2<-CovarExtract(x=AcZ2,cov.paths = l1)
###zone 3
dataAcZ3<-CovarExtract(x=AcZ3,cov.paths = l1)
###zone 4
dataAcZ4<-CovarExtract(x=AcZ4,cov.paths = l1)
#############fins zones
##zone 1
writeOGR(obj=dataAcZ1,dsn=tmpdir,layer="dataAcZ1",driver="ESRI Shapefile")
##zone 2
writeOGR(obj=dataAcZ2,dsn=tmpdir,layer="dataAcZ2",driver="ESRI Shapefile")
##zone 3
writeOGR(obj=dataAcZ3,dsn=tmpdir,layer="dataAcZ3",driver="ESRI Shapefile")
##zone 4
writeOGR(obj=dataAcZ4,dsn=tmpdir,layer="dataAcZ4",driver="ESRI Shapefile")
############### importer dataAcZ1.shp,dataAcZ2.shp,dataAcZ3.shp,dataAcZ4.shp
##zone 1
filename_PA_A_Z1<-paste0("C:\\Users\\Hp\\OneDrive\\redactions","\\dataAcZ1.shp")
PA_AcZ1<-shapefile(filename_PA_A_Z1)
map_Ac_1<-st_as_sf(PA_AcZ1)
map_Ac_1$Acacia<-if_else(map_Ac_1$Acacia ==1,"présence","absence")
map_Ac_1$Acacia<-as.factor(map_Ac_1$Acacia)
##zone 2
filename_PA_A_Z2<-paste0("C:\\Users\\Hp\\OneDrive\\redactions","\\dataAcZ2.shp")
PA_AcZ2<-shapefile(filename_PA_A_Z2)
map_Ac_2<-st_as_sf(PA_AcZ2)
map_Ac_2$Acacia<-if_else(map_Ac_2$Acacia ==1,"présence","absence")
map_Ac_2$Acacia<-as.factor(map_Ac_2$Acacia)
##zone 3
filename_PA_A_Z3<-paste0("C:\\Users\\Hp\\OneDrive\\redactions","\\dataAcZ3.shp")
PA_AcZ3<-shapefile(filename_PA_A_Z3)
map_Ac_3<-st_as_sf(PA_AcZ3)
map_Ac_3$Acacia<-if_else(map_Ac_3$Acacia ==1,"présence","absence")
map_Ac_3$Acacia<-as.factor(map_Ac_3$Acacia)
##zone 4
filename_PA_A_Z4<-paste0("C:\\Users\\Hp\\OneDrive\\redactions","\\dataAcZ4.shp")
PA_AcZ4<-shapefile(filename_PA_A_Z4)
map_Ac_4<-st_as_sf(PA_AcZ4)
map_Ac_4$Acacia<-if_else(map_Ac_4$Acacia ==1,"présence","absence")
map_Ac_4$Acacia<-as.factor(map_Ac_4$Acacia)
##########.shp des zones déjà importer
###########répresentation graphique des présence/absence de Acacia  dans les zones
##zone 1
plotPA_Ac_Z1<-ggplot(map_Ac_1)   +
geom_sf(aes(color = Acacia)) +
geom_sf(data = z1, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Acacia Model\\PA_AcaciAcZ1.png",plotPA_Ac_Z1)
##zone 2
plotPA_Ac_Z2<-ggplot(map_Ac_2)   +
geom_sf(aes(color = Acacia)) +
geom_sf(data = z2, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Acacia Model\\PA_AcaciAcZ2.png",plotPA_Ac_Z2)
##zone 3
plotPA_Ac_Z3<-ggplot(map_Ac_3)   +
geom_sf(aes(color = Acacia)) +
geom_sf(data = z3, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Acacia Model\\PA_AcaciAcZ3.png",plotPA_Ac_Z3)
##zone 4
plotPA_Ac_Z4<-ggplot(map_Ac_4)   +
geom_sf(aes(color = Acacia)) +
geom_sf(data = z4, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Acacia Model\\PA_AcaciAcZ4.png",plotPA_Ac_Z4)
#############1 avec le corrélogramme de SDMSelect
######zone 1
data.prepared1<-Prepare_dataset(x=dataFZ1,var=1,cov = 2:ncol(dataFZ1),datatype = "PA",na.rm = TRUE)
######zone 2
data.prepared2<-Prepare_dataset(x=dataFZ2,var=1,cov = 2:ncol(dataFZ2),datatype = "PA",na.rm = TRUE)
Base_Espece$Faidherbia_albida<-as.factor(Base_Espece$Faidherbia_albida)
library(rasterVis)
library(RStoolbox)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
#################################################
########↨importation des données de worldclim
###1)prendre les fichiers .tif(raster) qui se trouvent dans le dossier indiquer
l1<-list.files("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\",patt="\\.tif")
l1<-sprintf("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\%s",l1)
###2) utiliser la fonction stack pour rendre RasterStack
worlClim<-stack(l1)
###3)connaitre l'étendue de notre zone d'étude (ext)
ext<-extent(Species)
###4)utiliser crop pour mettre a la même zone d'étude les données de worlclim
worldClim.crop<-crop(worlClim,ext)
plot(worldClim.crop)
plot(worldClim.crop,6:9)
plot(worldClim.crop,1:4)
plot(worldClim.crop)
plot(worldClim.crop,1:9)
plot(worldClim.crop,10:19)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
filename_zone<-paste0("C:\\Users\\Hp\\OneDrive\\Memoire_ITS4","\\Diohine_Echanti_Classif.shp")
filename_zone
zone_etude<-shapefile(filename_zone)
filename_zone<-paste0("C:\\Users\\Hp\\OneDrive\\Memoire_ITS4\\shpzones","\\Diohine_Echanti_Classif.shp")
filename_zone
zone_etude<-shapefile(filename_zone)
map<-st_as_sf(zone_etude)
map$Zone<-as.factor(map$Zone)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggObj = =TRUE,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggObj =TRUE,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
plot(zone_etude,add=TRUE)
plot(zone_etude)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plot(zone_etude)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggObj =TRUE,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())+
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())+
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
map<-st_as_sf(zone_etude)
map$Zone<-as.factor(map$Zone)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())+
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())+
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)+
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)+
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100)) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)+
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5) +
scale_fill_gradientn(colours = terrain.colors(100)) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)+
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100))
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100))
worldClim.crop
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T) +
scale_fill_gradientn(colours = terrain.colors(100))
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T,forceCat = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100))
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T) +
scale_fill_gradientn(colours = terrain.colors(100))
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F) +
scale_fill_gradientn(colours = terrain.colors(100))
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T) +
scale_fill_gradientn(colours = terrain.colors(100))
ggplot(map)+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggplot(map) + geom_sf(aes(fill=Zone),colour="green")+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggplot(map) + geom_sf(aes(fill=Zone),colour="black")+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggplot(map) + geom_sf()+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
extent(zone_etude)
extent(worldClim.crop)
extent(zone_etude)<-extent(worldClim.crop)
extent(zone_etude)<-extent(-16.54167,-16.35833,14.45833,14.63333)
class(zone_etude)
my.polygon<-zone_etude
my.polygon@bbox <- as.matrix(extent(worldClim.crop))
extent(my.polygon)
plot(my.polygon)
map<-st_as_sf(my.polygon)
map$Zone<-as.factor(map$Zone)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green")
ggplot(map) + geom_sf()+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = F,ggLayer = TRUE)
ggplot(map) + geom_sf()+   ggR(worldClim.crop, 1, stretch = "hist",hue=0.5,geom_raster = T,ggLayer = TRUE)
ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
plot(my.polygon)
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = TRUE) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "elevation") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = muted("blue"),
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) + +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=F, stretch = "hist",hue=0.5,ggLayer = F) +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=F, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = muted("blue"),
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=F, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
ggR(worldClim.crop, 1, geom_raster=TRUE, stretch = "hist",hue=0.5,ggLayer = F) +
scale_fill_gradientn(colours = terrain.colors(100), name = "bio1") +
theme(axis.text = element_text(size=5),
axis.text.y = element_text(angle=90),
axis.title=element_blank())
library(FactoMineR)
library(ade4)
data("housetasks")
View(housetasks)
dataFZ1
map1
View(map1)
BaseAFC_FZ1<-map1
library(sf)
BaseAFC_FZ1<-st_drop_geometry(BaseAFC_FZ1)
res.caFZ1 <- CA(BaseAFC_FZ1,graph = FALSE)
data(poison)
View(poison)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:ncol(BaseAFC_FZ1), quali.sup = 1,graph = F)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:ncol(BaseAFC_FZ1), quali.sup = 1,graph = FALSE)
ncol(BaseAFC_FZ1)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:20, quali.sup = 1,graph = FALSE)
library(ade4)
library(FactoMineR)
##########Base de Faidherbia albida dans les zones avec les variables bioclimatiques
#zone 1
BaseAFC_FZ1<-map1
BaseAFC_FZ1<-st_drop_geometry(BaseAFC_FZ1)
View(BaseAFC_FZ1)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:20, quali.sup = 1,graph = FALSE)
class(BaseAFC_FZ1)
dim(BaseAFC_FZ1)
BaseAFC_FZ1<-as.data.frame(BaseAFC_FZ1)
res.mcaFZ1 <- MCA(BaseAFC_FZ1, quanti.sup = 2:20, quali.sup = 1,graph = FALSE)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,graph = FALSE)
data(tea)
View(tea)
res.mca <- MCA(tea,quanti.sup=19,quali.sup=20:36)
require(Factoshiny)
res <- MCAshiny(tea)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,quanti.sup=2:20,quali.sup=1,graph = FALSE)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,quanti.sup=2:10,quali.sup=1,graph = FALSE)
res.mcaFZ1 <- MCA(BaseAFC_FZ1,quanti.sup=2,quali.sup=1,graph = FALSE)
library(funModeling)
cross_plot(BaseAFC_FZ1,input="bio1",target = "Faidherbia")
#############"
Bcross<-BaseAFC_FZ1
Bcross$bio1_G=equal_freq(var=Bcross$bio1, n_bins = 3)
cross_plot(Bcross,input="bio1_G",target = "Faidherbia")
Bcross$bio2_G=equal_freq(var=Bcross$bio2, n_bins = 3)
cross_plot(Bcross,input="bio2_G",target = "Faidherbia")
Bcross$bio3_G=equal_freq(var=Bcross$bio3, n_bins = 3)
cross_plot(Bcross,input="bio3_G",target = "Faidherbia")
Bcross$bio4_G=equal_freq(var=Bcross$bio4, n_bins = 3)
cross_plot(Bcross,input="bio4_G",target = "Faidherbia")
Bcross$bio5_G=equal_freq(var=Bcross$bio5, n_bins = 3)
Bcross$bio5_G=equal_freq(var=Bcross$bio5, n_bins = 2)
cross_plot(Bcross,input="bio5_G",target = "Faidherbia")
Bcross$bio6_G=equal_freq(var=Bcross$bio6, n_bins = 3)
Bcross$bio6_G=equal_freq(var=Bcross$bio6, n_bins = 2)
cross_plot(Bcross,input="bio6_G",target = "Faidherbia")
res.mcaFZ1 <- MCA(BaseAFC_FZ1)
data(tea)
res.mca <- MCA(tea,quanti.sup=19,quali.sup=20:36)
du<-duplicated(BaseAFC_FZ1,1:ncol(BaseAFC_FZ1))
du<-duplicated(BaseAFC_FZ1)
table(du)
Base_Faidherbia_Z
