sp::coordinates(FZ1) <-~lon+lat
sp::proj4string(FZ1) <-"+proj=longlat +datum=WGS84"
data<-CovarExtract(x=FZ1,cov.paths = l1)
names(data)
#show observations positions Species<-st_read(filename,quiet = T)
par(mar=c(2,2,2,2))
raster::plot(worldClim.crop,"bio1")
sp::plot(zone_etude1, add=T)
sp::plot(data,col=c("red","blue")[data@data$Faidherbia + 1],pch=20, cex=c(0.5,1)[data@data$Faidherbia + 1],add=T)
data
###################Modélisation dans la zone 1, avec les variables de worldClim
#extract covariables, combine with dataset
#Transform data as SpatialPointDataFrame
class(Base_Faidherbia_Z1)
FZ1<-Base_Faidherbia_Z1
view(FZ1)
sp::coordinates(FZ1) <-~lon+lat
sp::proj4string(FZ1) <-"+proj=longlat +datum=WGS84"
data<-CovarExtract(x=FZ1,cov.paths = l1) # en utilsisant SDMSelect
names(data)
dataFZ1<-CovarExtract(x=FZ1,cov.paths = l1) # en utilsisant SDMSelect
names(dataFZ1)
class(dataFZ1)
dataFZ1
worldClim.cropFZ1<-worldClim.crop
class(dataFZ1)
library(maptools)
writeSpatialShape(dataFZ1, "dataFZ1")
writeOGR(dataFZ1, "dataFZ1")
library(sf)
writeOGR(dataFZ1, "dataFZ1")
library(rgdal)
writeOGR(obj=dataFZ1,layer="dataFZ1",driver="ESRI Shapefile")
tmpdir<-"C:\\Users\\Hp\\OneDrive\\redactions"
writeOGR(obj=dataFZ1,dsn=tmpdir,layer="dataFZ1",driver="ESRI Shapefile")
Base_Espece$Faidherbia_albida<-if_else(Base_Espece$Species =="Faidherbia albida","1","0")
data_df<-st_drop_geometry(Base_Espece)
class(data_df)
##########???les espèces dans les différentes zones
Base_Espece_Zone1<-data_df %>%
filter(Zone == 1)
Base_Espece_Zone2<-data_df %>%
filter(Zone == 2)
Base_Espece_Zone4<-data_df %>%
filter(Zone == 3)
Base_Espece_Zone4<-data_df %>%
filter(Zone == 4)
###################Modélisation dans la zone 1, avec les variables de worldClim
#extract covariables, combine with dataset
#Transform data as SpatialPointDataFrame
class(Base_Faidherbia_Z1)
FZ1<-Base_Faidherbia_Z1
view(FZ1)
sp::coordinates(FZ1) <-~lon+lat
sp::proj4string(FZ1) <-"+proj=longlat +datum=WGS84"
dataFZ1<-CovarExtract(x=FZ1,cov.paths = l1) # en utilsisant SDMSelect
dataFZ1<-CovarExtract(x=FZ1,cov.paths = l1,is.factor = as.factor(FZ1$Faidherbia)) # en utilsisant SDMSelect
writeOGR(obj=dataFZ1,dsn=tmpdir,layer="dataFZ1",driver="ESRI Shapefile")
writeOGR(obj=dataFZ1,dsn=tmpdir,layer="dataFZ1",driver="ESRI Shapefile")
writeOGR(obj=worldClim.crop,dsn=tmpdir,layer="worldClim.crop",driver="ESRI Shapefile")
raster::plot(worldClim.crop,"bio1")
sp::plot(data,col=c("red","blue")[data@data$Faidherbia + 1],pch=20, cex=c(0.5,1)[data@data$Faidherbia + 1],add=T)
png("bio1F1.png")
library(sf)
library("ggspatial")
library(tmap)
PA_FZ1<-
names(dataFZ1)
PA_FZ1<-
names(dataFZ1)
#PA_FZ1<-
names(dataFZ1)
filename_PA_Z1<-paste0("C:\\Users\\Hp\\OneDrive\\redactions","\\dataFZ1.shp")
PA_FZ1<-shapefile(filename_PA_Z1)
map1<-st_as_sf(PA_FZ1)
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour="green") +
theme_gray()
library(ggplot2)
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour="green") +
theme_gray()
plotPAZ1
raster::plot(worldClim.crop,"bio1")
sp::plot(zone_etude1, add=T)
sp::plot(data,col=c("red","blue")[data@data$Faidherbia + 1],pch=20, cex=c(0.5,1)[data@data$Faidherbia + 1],add=T)
library(dplyr)
Base_Espece$Faidherbia_albida<-if_else(Base_Espece$Species =="Faidherbia albida","1","0")
Base_Espece$Faidherbia_albida<-as.factor(Base_Espece$Faidherbia_albida)
#Balanites aegyptiaca
Base_Espece$Balanites_aegyptiaca<-as.factor(if_else(Base_Espece$Species =="Balanites aegyptiaca","1","0"))
#Anogeissus leiocarpus
Base_Espece$Anogeissus_leiocarpus<-as.factor(if_else(Base_Espece$Species =="Anogeissus leiocarpus","1","0"))
#Adansonia digitata
Base_Espece$Adansonia_digitata<-as.factor(if_else(Base_Espece$Species =="Adansonia digitata","1","0"))
#Acacia nilotica
Base_Espece$Acacia_nilotica<-as.factor(if_else(Base_Espece$Species =="Acacia nilotica","1","0"))
data_df<-st_drop_geometry(Base_Espece)
class(data_df)
##########???les espèces dans les différentes zones
Base_Espece_Zone1<-data_df %>%
filter(Zone == 1)
Base_Espece_Zone2<-data_df %>%
filter(Zone == 2)
Base_Espece_Zone4<-data_df %>%
filter(Zone == 3)
Base_Espece_Zone4<-data_df %>%
filter(Zone == 4)
###################Modélisation dans la zone 1, avec les variables de worldClim
#extract covariables, combine with dataset
#Transform data as SpatialPointDataFrame
class(Base_Faidherbia_Z1)
FZ1<-Base_Faidherbia_Z1
view(FZ1)
sp::coordinates(FZ1) <-~lon+lat
sp::proj4string(FZ1) <-"+proj=longlat +datum=WGS84"
library(rgdal)
writeOGR(obj=dataFZ1,dsn=tmpdir,layer="dataFZ1",driver="ESRI Shapefile")
filename_PA_Z1<-paste0("C:\\Users\\Hp\\OneDrive\\redactions","\\dataFZ1.shp")
PA_FZ1<-shapefile(filename_PA_Z1)
map1<-st_as_sf(PA_FZ1)
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour="green") +
theme_gray()
plotPAZ1
View(map1)
map1$Faidherbia<-if_else(map1$Faidherbia ==1,"présence","absence")
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour="green") +
theme_gray()
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour=c("green","red") +
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour=c("green","red")) +
theme_gray()
plotPAZ1
filename_zone<-paste0("C:\\Users\\Hp\\OneDrive\\Memoire_ITS4","\\Diohine_Echanti_Classif.shp")
filename_zone
zone_etude<-shapefile(filename_zone)
plot(zone_etude)
map<-st_as_sf(zone_etude)
strat_zone<-ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
strat_zone<-ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray()
strat_zone
map$Zone<-as.factor(map$Zone)
strat_zone<-ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray()
strat_zone
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour=c("green","red")) +
theme_gray()
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour=c"red") +
theme_gray()
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour="red") +
theme_gray()
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia)) +
theme_gray()
plotPAZ1
map1$Faidherbia<-as.factor(map1$Faidherbia)
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia)) +
theme_gray()
plotPAZ1
View(map1)
strat_zone
zone_etude1<-shapefile("C:\\Users\\Hp\\OneDrive\\cirad\\Data\\BD_Arbre\\Zone_1_BON.shp")
z1<-st_as_sf(zone_etude1)
View(z1)
strat_zone<-ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
ggplot(z1)  + geom_sf(aes(fill=Zone)) +
theme_gray()
crs(z1)<-crs(zone_etude1)
#data<-CovarExtract(x=Base_Espece,cov.paths = l1)
library(sf)
crs(z1)<-crs(zone_etude1)
sp::proj4string(zone_etude1) <-"+proj=longlat +datum=WGS84"
z1<-st_as_sf(zone_etude1)
sp::proj4string(z1) <-"+proj=longlat +datum=WGS84"
zone_etude1<-shapefile("C:\\Users\\Hp\\OneDrive\\cirad\\Data\\BD_Arbre\\Zone_1_BON.shp")
z1<-st_as_sf(zone_etude1)
View(z1)
ggplot(z1)  + geom_sf(aes(fill=Zone)) +
theme_gray()
ggplot(z1)  + geom_sf(aes(fill=Zone),color="green") +
theme_gray()
ggplot(z1)  + geom_sf(aes(fill=geometry),color="green") +
theme_gray()
ggplot(z1)  + geom_sf(color="green") +
theme_gray()
plotPAZ1<-ggplot(map1)  + geom_sf(colour="green") +
theme_gray()
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(colour="green") +
geom_polygon(data=z1)
plotPAZ1
ids <- factor(c("1.1", "2.1", "1.2", "2.2", "1.3", "2.3"))
values <- data.frame(
id = ids,
value = c(3, 3.1, 3.1, 3.2, 3.15, 3.5)
)
positions <- data.frame(
id = rep(ids, each = 4),
x = c(2, 1, 1.1, 2.2, 1, 0, 0.3, 1.1, 2.2, 1.1, 1.2, 2.5, 1.1, 0.3,
0.5, 1.2, 2.5, 1.2, 1.3, 2.7, 1.2, 0.5, 0.6, 1.3),
y = c(-0.5, 0, 1, 0.5, 0, 0.5, 1.5, 1, 0.5, 1, 2.1, 1.7, 1, 1.5,
2.2, 2.1, 1.7, 2.1, 3.2, 2.8, 2.1, 2.2, 3.3, 3.2)
)
# Currently we need to manually merge the two together
datapoly <- merge(values, positions, by = c("id"))
p <- ggplot(datapoly, aes(x = x, y = y)) +
geom_polygon(aes(fill = value, group = id))
p
stream <- data.frame(
x = cumsum(runif(50, max = 0.1)),
y = cumsum(runif(50,max = 0.1))
)
p + geom_line(data = stream, colour = "grey30", size = 5)
plotPAZ1<-ggplot(map1)  + geom_sf(colour="green") +
theme_gray()
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(colour="green") +
geom_sf(data = z1, colour = "red", fill = NA)
plotPAZ1<-ggplot(map1)  + geom_sf(colour="green") +
geom_sf(data = z1, colour = "red", fill = NA) +
theme_gray()
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(colour="green") +
geom_sf(data = z1, colour = "red", fill = NA) +
annotate("point", x = -80, y = 35, colour = "red", size = 4)+
theme_gray()
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(colour="green") +
geom_sf(data = z1, colour = "red", fill = NA) +
theme_gray()
plotPAZ1
if (requireNamespace("sf", quietly = TRUE)) {
nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE)
ggplot(nc) +
geom_sf(aes(fill = AREA))
# If not supplied, coord_sf() will take the CRS from the first layer
# and automatically transform all other layers to use that CRS. This
# ensures that all data will correctly line up
nc_3857 <- sf::st_transform(nc, "+init=epsg:3857")
ggplot() +
geom_sf(data = nc) +
geom_sf(data = nc_3857, colour = "red", fill = NA)
# Unfortunately if you plot other types of feature you'll need to use
# show.legend to tell ggplot2 what type of legend to use
nc_3857$mid <- sf::st_centroid(nc_3857$geometry)
ggplot(nc_3857) +
geom_sf(colour = "white") +
geom_sf(aes(geometry = mid, size = AREA), show.legend = "point")
# You can also use layers with x and y aesthetics: these are
# assumed to already be in the common CRS.
ggplot(nc) +
geom_sf() +
annotate("point", x = -80, y = 35, colour = "red", size = 4)
# Thanks to the power of sf, a geom_sf nicely handles varying projections
# setting the aspect ratio correctly.
library(maps)
world1 <- sf::st_as_sf(map('world', plot = FALSE, fill = TRUE))
ggplot() + geom_sf(data = world1)
world2 <- sf::st_transform(
world1,
"+proj=laea +y_0=0 +lon_0=155 +lat_0=-90 +ellps=WGS84 +no_defs"
)
ggplot() + geom_sf(data = world2)
# To add labels, use geom_sf_label().
ggplot(nc_3857[1:3, ]) +
geom_sf(aes(fill = AREA)) +
geom_sf_label(aes(label = NAME))
}
install.packages("ggspatial")
library("ggspatial")
map<-st_as_sf(zone_etude)
map$Zone<-as.factor(map$Zone)
strat_zone<-ggplot(map)  + geom_sf(aes(fill=Zone),colour="green") +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
strat_zone
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\strat_zone.png",strat_zone)
plotPAZ1<-ggplot(map1)  + geom_sf(colour="green") +
geom_sf(data = z1, colour = "red", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill="Faidherbia"),colour="green") +
geom_sf(data = z1, colour = "red", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
plotPAZ1<-ggplot(map1)  + geom_sf(aes(fill=Faidherbia),colour="green") +
geom_sf(data = z1, colour = "red", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia))
plotPAZ1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "red", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "green", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Faidherbia Model\\PA_FaidherbiaZ1.png",plotPAZ1)
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia,size=0.1)) +
geom_sf(data = z1, colour = "black", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia,size=0.01)) +
geom_sf(data = z1, colour = "black", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia,size=1)) +
geom_sf(data = z1, colour = "black", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA) +
theme_gray() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
plot(worldClim.crop$bio1)
##############
l1<-list.files("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\",patt="\\.tif")
l1<-sprintf("D:\\Stage_SDM\\SDM\\Data\\WorldClim\\wc2.0_30s_bio\\%s",l1)
worlClim<-stack(l1)
covar<-names(worlClim)
ext<-extent(Species)
worldClim.crop<-crop(worlClim,ext)
plot(worldClim.crop$bio1)
worldClim.crop$bio1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA) +
geom_raster(data= worldClim.crop,aes(fill = worldClim.crop$bio1)) +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA) +
geom_raster(data= worldClim.crop$bio1,aes(fill = worldClim.crop$bio1)) +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
dataFZ1<-CovarExtract(x=FZ1,cov.paths = l1) # en utilsisant SDMSelect
library(SDMSelect)
dataFZ1<-CovarExtract(x=FZ1,cov.paths = l1) # en utilsisant SDMSelect
dataFZ1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA) +
geom_raster(data= map1,aes(fill = bio1)) +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
eruptions
ggplot(faithfuld, aes(waiting, eruptions)) +
geom_raster(aes(fill = density))
dataFZ1
dataF1<-dataFZ1@data
View(dataF1)
mf1<-map1
mf1$Faidherbia<-if_else(mf1$Faidherbia =="présence","1","0")
mf1$Faidherbia<-as.factor(mf1$Faidherbia)
View(dataF1)
View(mf1)
rasterFZ1<-left_join(mf1,dataF1)
dataF1$Faidherbia<-as.factor(dataF1$Faidherbia)
rasterFZ1<-left_join(mf1,dataF1)
View(rasterFZ1)
rasterFZ1<-left_join(mf1,dataF1,by="Faidherbia")
rasterFZ1<-left_join(mf1,dataF1,by="bio1")
########Model Faidherbia albida
Base_Faidherbia_Z1<-Base_Espece_Zone1 %>%
select(xcoord,ycoord,Faidherbia_albida)
names(Base_Faidherbia_Z1)<-c("lon","lat","Faidherbia")
View(data_df)
View(Base_Faidherbia_Z1)
joint1<-Base_Faidherbia_Z1 %>%
select(lon,lat)
rasterFZ1<-cbind(dataF1,joint1)
p <- ggplot(rasterFZ1, aes(lon,lat)) +
geom_raster(data= rasterFZ1,aes(fill = bio1)) +
coord_equal()
p
p <- ggplot(rasterFZ1, aes(lon,lat)) +
geom_raster(data= rasterFZ1,aes(fill = bio1))
p
p <- ggplot(rasterFZ1, aes(lat,lon)) +
geom_raster(data= rasterFZ1,aes(fill = bio1))
p
p <- ggplot(rasterFZ1, aes(lat,lon)) +
geom_raster(data= rasterFZ1,aes(fill = bio1)) +
coord_equal() + scale_fill_viridis(name = "Estimation") +
geom_point( size=3,color = rgb(0.2,0.2,0.2,0.1))
library(viridis)
p <- ggplot(rasterFZ1, aes(lat,lon)) +
geom_raster(data= rasterFZ1,aes(fill = bio1)) +
coord_equal() + scale_fill_viridis(name = "Estimation") +
geom_point( size=3,color = rgb(0.2,0.2,0.2,0.1))
p
p <- ggplot(rasterFZ1, aes(lon,lat)) +
geom_raster(data= rasterFZ1,aes(fill = bio1)) +
coord_equal() + scale_fill_viridis(name = "Estimation") +
geom_point( size=3,color = rgb(0.2,0.2,0.2,0.1))
p
plot(worldClim.crop$bio1)
worldClim.crop$bio1
plotPAZ1<-ggplot(map1)   +
geom_sf(aes(color = Faidherbia)) +
geom_sf(data = z1, colour = "black", fill = NA)  +
theme_bw() + annotation_scale(location = "bl", width_hint = 0.3) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.1, "in"), pad_y = unit(0.2, "in"),
style = north_arrow_fancy_orienteering)
plotPAZ1
ggsave("C:\\Users\\Hp\\OneDrive\\redactions\\Faidherbia Model\\PA_FaidherbiaZ1.png",plotPAZ1)
ggplot(faithfuld, aes(waiting, eruptions)) +
geom_raster(aes(fill = density))
# Interpolation smooths the surface & is most helpful when rendering images.
ggplot(faithfuld, aes(waiting, eruptions)) +
geom_raster(aes(fill = density), interpolate = TRUE)
ggplot(faithfuld, aes(waiting, eruptions)) +
geom_raster(aes(fill = density))
# Interpolation smooths the surface & is most helpful when rendering images.
ggplot(faithfuld, aes(waiting, eruptions)) +
geom_raster(aes(fill = density), interpolate = TRUE)
# If you want to draw arbitrary rectangles, use geom_tile() or geom_rect()
df <- data.frame(
x = rep(c(2, 5, 7, 9, 12), 2),
y = rep(c(1, 2), each = 5),
z = factor(rep(1:5, each = 2)),
w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2)
)
View(df)
ggplot(df, aes(x, y)) +
geom_tile(aes(fill = z), colour = "grey50")
ggplot(df, aes(x, y, width = w)) +
geom_tile(aes(fill = z), colour = "grey50")
ggplot(df, aes(xmin = x - w / 2, xmax = x + w / 2, ymin = y, ymax = y + 1)) +
geom_rect(aes(fill = z), colour = "grey50")
# Justification controls where the cells are anchored
df <- expand.grid(x = 0:5, y = 0:5)
View(df)
df$z <- runif(nrow(df))
# default is compatible with geom_tile()
ggplot(df, aes(x, y, fill = z)) + geom_raster()
# zero padding
ggplot(df, aes(x, y, fill = z)) + geom_raster(hjust = 0, vjust = 0)
# Inspired by the image-density plots of Ken Knoblauch
cars <- ggplot(mtcars, aes(mpg, factor(cyl)))
cars + geom_point()
cars + stat_bin2d(aes(fill = stat(count)), binwidth = c(3,1))
cars + stat_bin2d(aes(fill = stat(density)), binwidth = c(3,1))
cars + stat_density(aes(fill = stat(density)), geom = "raster", position = "identity")
cars + stat_density(aes(fill = stat(count)), geom = "raster", position = "identity")
View(df)
View(rasterFZ1)
worldClim.crop$bio1
